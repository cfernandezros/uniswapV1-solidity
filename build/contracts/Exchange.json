{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "min_liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max_tokens",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min_eth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min_tokens",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/carlosfernandez/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
    "4": "contracts/Exchange.sol"
  },
  "ast": {
    "absolutePath": "contracts/Exchange.sol",
    "exportedSymbols": {
      "Context": [
        938
      ],
      "ERC20": [
        812
      ],
      "Exchange": [
        305
      ],
      "IERC20": [
        890
      ],
      "IERC20Metadata": [
        915
      ]
    },
    "id": 306,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/Users/carlosfernandez/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 306,
        "sourceUnit": 891,
        "src": "57:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/carlosfernandez/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 306,
        "sourceUnit": 813,
        "src": "114:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 812,
              "src": "192:5:4"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "192:5:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 305,
        "linearizedBaseContracts": [
          305,
          812,
          915,
          890,
          938
        ],
        "name": "Exchange",
        "nameLocation": "180:8:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8c8e8fee",
            "id": 7,
            "mutability": "mutable",
            "name": "token_address",
            "nameLocation": "217:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 305,
            "src": "202:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "202:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "293:98:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "309:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 20,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "327:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 19,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "319:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "319:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "319:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "309:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420746f6b656e2061646472657373",
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "331:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
                          "typeString": "literal_string \"invalid token address\""
                        },
                        "value": "invalid token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
                          "typeString": "literal_string \"invalid token address\""
                        }
                      ],
                      "id": 16,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "301:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "301:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "301:54:4"
                },
                {
                  "expression": {
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26,
                      "name": "token_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "364:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "380:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "364:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "364:22:4"
                }
              ]
            },
            "id": 31,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "556e6973776170205631",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "269:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7b928d32b53d799de769df1754d47e52c0dee89165b0b1f76c4bce9a17798ce0",
                      "typeString": "literal_string \"Uniswap V1\""
                    },
                    "value": "Uniswap V1"
                  },
                  {
                    "hexValue": "554e492d5631",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "283:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_53d6e2db274f7b772a8e8b658585c3b1615d455cca28442fb7451793265f97a0",
                      "typeString": "literal_string \"UNI-V1\""
                    },
                    "value": "UNI-V1"
                  }
                ],
                "id": 14,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 812,
                  "src": "263:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "263:29:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "255:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "247:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "246:16:4"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:0:4"
            },
            "scope": 305,
            "src": "235:156:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "448:64:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "501:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$305",
                              "typeString": "contract Exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exchange_$305",
                              "typeString": "contract Exchange"
                            }
                          ],
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "493:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "493:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "493:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 37,
                            "name": "token_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "468:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 36,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "461:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$890_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "461:21:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$890",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 829,
                      "src": "461:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 45,
                  "nodeType": "Return",
                  "src": "454:53:4"
                }
              ]
            },
            "functionSelector": "0902f1ac",
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "404:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:4"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "439:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:9:4"
            },
            "scope": 305,
            "src": "395:117:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "614:1073:4",
              "statements": [
                {
                  "assignments": [
                    57
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57,
                      "mutability": "mutable",
                      "name": "total_liquidity",
                      "nameLocation": "628:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "620:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "620:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "646:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:13:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "620:39:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "670:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "688:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "670:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "1321:362:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 145,
                                  "name": "token_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "1337:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 148,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1362:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1354:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 146,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1354:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1354:10:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1337:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 151,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1368:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "1368:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "31303030303030303030",
                                  "id": 153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1381:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                  },
                                  "value": "1000000000"
                                },
                                "src": "1368:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1337:54:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 144,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1329:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1329:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 157,
                        "nodeType": "ExpressionStatement",
                        "src": "1329:63:4"
                      },
                      {
                        "assignments": [
                          159
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 159,
                            "mutability": "mutable",
                            "name": "token_amount",
                            "nameLocation": "1408:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "1400:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1400:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 161,
                        "initialValue": {
                          "id": 160,
                          "name": "max_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1423:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1400:33:4"
                      },
                      {
                        "assignments": [
                          163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 163,
                            "mutability": "mutable",
                            "name": "liquidity_minted",
                            "nameLocation": "1449:16:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "1441:24:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 162,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1441:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 169,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 166,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1476:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exchange_$305",
                                  "typeString": "contract Exchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exchange_$305",
                                  "typeString": "contract Exchange"
                                }
                              ],
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1468:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 164,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1468:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1468:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1468:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1441:48:4"
                      },
                      {
                        "assignments": [
                          172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 172,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1505:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "1498:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$890",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 171,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 170,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 890,
                                "src": "1498:6:4"
                              },
                              "referencedDeclaration": 890,
                              "src": "1498:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$890",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 176,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 174,
                              "name": "token_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1520:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 173,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "1513:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$890_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1513:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$890",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1498:36:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 180,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1561:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1561:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 184,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1581:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exchange_$305",
                                    "typeString": "contract Exchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exchange_$305",
                                    "typeString": "contract Exchange"
                                  }
                                ],
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1573:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 182,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1573:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1573:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 186,
                              "name": "token_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1588:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 177,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "1542:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$890",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 871,
                            "src": "1542:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1542:59:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 188,
                        "nodeType": "ExpressionStatement",
                        "src": "1542:59:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 190,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1616:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1616:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 192,
                              "name": "liquidity_minted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "1628:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 189,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "1610:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1610:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "1610:35:4"
                      },
                      {
                        "expression": {
                          "id": 195,
                          "name": "liquidity_minted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "1660:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 55,
                        "id": 196,
                        "nodeType": "Return",
                        "src": "1653:23:4"
                      }
                    ]
                  },
                  "id": 198,
                  "nodeType": "IfStatement",
                  "src": "666:1017:4",
                  "trueBody": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "691:619:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 65,
                                "name": "min_liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "707:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 66,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "723:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "707:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f7420656e6f756768206c697175696469747921",
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "726:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c94a46a95c11ec6946f81adfb86e6a5525b3b8c0572e6cc04f1bd6a7d50fb59d",
                                "typeString": "literal_string \"not enough liquidity!\""
                              },
                              "value": "not enough liquidity!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c94a46a95c11ec6946f81adfb86e6a5525b3b8c0572e6cc04f1bd6a7d50fb59d",
                                "typeString": "literal_string \"not enough liquidity!\""
                              }
                            ],
                            "id": 64,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "699:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "699:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70,
                        "nodeType": "ExpressionStatement",
                        "src": "699:51:4"
                      },
                      {
                        "assignments": [
                          72
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 72,
                            "mutability": "mutable",
                            "name": "eth_reserve",
                            "nameLocation": "767:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 143,
                            "src": "759:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "759:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 81,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 75,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "789:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exchange_$305",
                                    "typeString": "contract Exchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exchange_$305",
                                    "typeString": "contract Exchange"
                                  }
                                ],
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "781:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "781:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "781:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "781:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 78,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "805:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "805:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "781:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "759:55:4"
                      },
                      {
                        "assignments": [
                          83
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 83,
                            "mutability": "mutable",
                            "name": "token_reserve",
                            "nameLocation": "830:13:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 143,
                            "src": "822:21:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "822:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 86,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 84,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "846:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "846:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "822:37:4"
                      },
                      {
                        "assignments": [
                          88
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 88,
                            "mutability": "mutable",
                            "name": "token_amount",
                            "nameLocation": "876:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 143,
                            "src": "868:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 87,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "868:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 95,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 89,
                              "name": "token_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "891:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 90,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "907:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "907:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "891:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 93,
                            "name": "eth_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "919:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "891:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "868:62:4"
                      },
                      {
                        "assignments": [
                          97
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 97,
                            "mutability": "mutable",
                            "name": "liquidity_minted",
                            "nameLocation": "946:16:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 143,
                            "src": "938:24:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 96,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "938:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 104,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98,
                              "name": "total_liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "965:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 99,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "983:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "983:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "965:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 102,
                            "name": "eth_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "995:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "965:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "938:68:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 106,
                                  "name": "max_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "1023:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 107,
                                  "name": "token_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88,
                                  "src": "1037:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1023:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 109,
                                  "name": "liquidity_minted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97,
                                  "src": "1053:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 110,
                                  "name": "min_liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "1073:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1053:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1023:63:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "77726f6e67206c69712e2070726f766964657220706172616d73",
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1088:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_472d2999ae1fcc83ae3a0811cc45655f1e5d979a1173f61c2bea830499778fa0",
                                "typeString": "literal_string \"wrong liq. provider params\""
                              },
                              "value": "wrong liq. provider params"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_472d2999ae1fcc83ae3a0811cc45655f1e5d979a1173f61c2bea830499778fa0",
                                "typeString": "literal_string \"wrong liq. provider params\""
                              }
                            ],
                            "id": 105,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1015:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1015:102:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "1015:102:4"
                      },
                      {
                        "assignments": [
                          118
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 118,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1132:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 143,
                            "src": "1125:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$890",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 117,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 116,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 890,
                                "src": "1125:6:4"
                              },
                              "referencedDeclaration": 890,
                              "src": "1125:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$890",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 122,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 120,
                              "name": "token_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1147:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 119,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "1140:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$890_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1140:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$890",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1125:36:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 126,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1188:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1188:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 130,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1208:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Exchange_$305",
                                    "typeString": "contract Exchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Exchange_$305",
                                    "typeString": "contract Exchange"
                                  }
                                ],
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1200:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 128,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1200:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1200:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 132,
                              "name": "token_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "1215:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 123,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "1169:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$890",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 871,
                            "src": "1169:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1169:59:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "1169:59:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 136,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1243:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1243:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 138,
                              "name": "liquidity_minted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "1255:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 135,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "1237:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1237:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "1237:35:4"
                      },
                      {
                        "expression": {
                          "id": 141,
                          "name": "liquidity_minted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1287:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 55,
                        "id": 142,
                        "nodeType": "Return",
                        "src": "1280:23:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9cd441da",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "525:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "min_liquidity",
                  "nameLocation": "546:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "538:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "max_tokens",
                  "nameLocation": "569:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "561:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:43:4"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "605:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "604:9:4"
            },
            "scope": 305,
            "src": "516:1171:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "1803:646:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 214,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "1817:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1826:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1817:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 217,
                              "name": "min_eth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 204,
                              "src": "1831:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1841:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1831:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1817:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 221,
                            "name": "min_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "1846:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1859:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1846:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1817:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1809:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:52:4"
                },
                {
                  "assignments": [
                    228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "total_liquidity",
                      "nameLocation": "1875:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "1867:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1867:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 229,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "1893:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:13:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1867:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 233,
                          "name": "total_liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "1920:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1938:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1920:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6971756964697479206d75737420626520706f73697469766520746f2072656d6f7665",
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1941:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5a4924debe71bed0f83fa874e00a0e252495dee9b8a7acc73412131c7788f9c",
                          "typeString": "literal_string \"liquidity must be positive to remove\""
                        },
                        "value": "liquidity must be positive to remove"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5a4924debe71bed0f83fa874e00a0e252495dee9b8a7acc73412131c7788f9c",
                          "typeString": "literal_string \"liquidity must be positive to remove\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1912:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1912:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "1912:68:4"
                },
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "mutability": "mutable",
                      "name": "token_reserve",
                      "nameLocation": "1995:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "1987:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1987:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 241,
                      "name": "getReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2011:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:13:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1987:37:4"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "eth_amount",
                      "nameLocation": "2038:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "2030:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2030:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 246,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2051:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 249,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2068:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Exchange_$305",
                                "typeString": "contract Exchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Exchange_$305",
                                "typeString": "contract Exchange"
                              }
                            ],
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2060:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2060:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2051:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 253,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "2084:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2051:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2030:69:4"
                },
                {
                  "assignments": [
                    257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "token_amount",
                      "nameLocation": "2113:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "2105:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2105:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 263,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 258,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2128:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 259,
                        "name": "token_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2137:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2128:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 261,
                      "name": "total_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "2153:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2128:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2105:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 265,
                            "name": "eth_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "2182:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 266,
                            "name": "min_eth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2196:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2182:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 268,
                            "name": "token_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2207:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 269,
                            "name": "min_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "2223:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2207:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2182:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e67206c69712e2072656d6f76696e6720706172616d73",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2235:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfba5bfc529e523deddaf75ddddcffc99829667ec4e991ce0f96919d09460c21",
                          "typeString": "literal_string \"wrong liq. removing params\""
                        },
                        "value": "wrong liq. removing params"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfba5bfc529e523deddaf75ddddcffc99829667ec4e991ce0f96919d09460c21",
                          "typeString": "literal_string \"wrong liq. removing params\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2174:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:90:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:90:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2277:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2277:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 278,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2289:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 275,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "2271:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:25:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 287,
                        "name": "eth_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2331:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 283,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2310:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2310:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2302:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2302:8:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2302:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:40:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 294,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2379:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2379:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 296,
                        "name": "token_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "2391:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 291,
                            "name": "token_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2355:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 290,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "2348:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$890_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2348:21:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$890",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 839,
                      "src": "2348:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2348:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:56:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 299,
                        "name": "eth_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2419:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 300,
                        "name": "token_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "2431:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 301,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2418:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 302,
                  "nodeType": "Return",
                  "src": "2411:33:4"
                }
              ]
            },
            "functionSelector": "857620e1",
            "id": 304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "1700:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1724:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1716:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "min_eth",
                  "nameLocation": "1740:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1732:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "min_tokens",
                  "nameLocation": "1757:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1749:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1715:53:4"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1785:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1794:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1784:18:4"
            },
            "scope": 305,
            "src": "1691:758:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 306,
        "src": "171:2280:4",
        "usedErrors": []
      }
    ],
    "src": "32:2419:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001480380380620014808339810160408190526200003491620001c4565b604080518082018252600a815269556e697377617020563160b01b602080830191825283518085019094526006845265554e492d563160d01b90840152815191929162000084916003916200011e565b5080516200009a9060049060208401906200011e565b5050506001600160a01b038116620000f85760405162461bcd60e51b815260206004820152601560248201527f696e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b039290921691909117905562000233565b8280546200012c90620001f6565b90600052602060002090601f0160209004810192826200015057600085556200019b565b82601f106200016b57805160ff19168380011785556200019b565b828001600101855582156200019b579182015b828111156200019b5782518255916020019190600101906200017e565b50620001a9929150620001ad565b5090565b5b80821115620001a95760008155600101620001ae565b600060208284031215620001d757600080fd5b81516001600160a01b0381168114620001ef57600080fd5b9392505050565b600181811c908216806200020b57607f821691505b602082108114156200022d57634e487b7160e01b600052602260045260246000fd5b50919050565b61123d80620002436000396000f3fe6080604052600436106100e85760003560e01c806370a082311161008a5780639cd441da116100595780639cd441da14610294578063a457c2d7146102a7578063a9059cbb146102c7578063dd62ed3e146102e757600080fd5b806370a08231146101dc578063857620e1146102125780638c8e8fee1461024757806395d89b411461027f57600080fd5b806318160ddd116100c657806318160ddd1461016b57806323b872dd14610180578063313ce567146101a057806339509351146101bc57600080fd5b806306fdde03146100ed5780630902f1ac14610118578063095ea7b31461013b575b600080fd5b3480156100f957600080fd5b5061010261032d565b60405161010f91906110f1565b60405180910390f35b34801561012457600080fd5b5061012d6103bf565b60405190815260200161010f565b34801561014757600080fd5b5061015b61015636600461103e565b610440565b604051901515815260200161010f565b34801561017757600080fd5b5060025461012d565b34801561018c57600080fd5b5061015b61019b366004611002565b610457565b3480156101ac57600080fd5b506040516012815260200161010f565b3480156101c857600080fd5b5061015b6101d736600461103e565b61050d565b3480156101e857600080fd5b5061012d6101f7366004610fad565b6001600160a01b031660009081526020819052604090205490565b34801561021e57600080fd5b5061023261022d3660046110c5565b610544565b6040805192835260208301919091520161010f565b34801561025357600080fd5b50600554610267906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b34801561028b57600080fd5b5061010261073a565b61012d6102a23660046110a3565b610749565b3480156102b357600080fd5b5061015b6102c236600461103e565b6109be565b3480156102d357600080fd5b5061015b6102e236600461103e565b610a59565b3480156102f357600080fd5b5061012d610302366004610fcf565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461033c906111b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906111b6565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b5050505050905090565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561040357600080fd5b505afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b919061108a565b905090565b600061044d338484610a66565b5060015b92915050565b6000610464848484610b8b565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104ee5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61050285336104fd868561119f565b610a66565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161044d9185906104fd908690611146565b6000806000851180156105575750600084115b80156105635750600083115b61056c57600080fd5b600061057760025490565b9050600081116105d55760405162461bcd60e51b8152602060048201526024808201527f6c6971756964697479206d75737420626520706f73697469766520746f2072656044820152636d6f766560e01b60648201526084016104e5565b60006105df6103bf565b90506000826105ee478a611180565b6105f8919061115e565b9050600083610607848b611180565b610611919061115e565b90508782101580156106235750868110155b61066f5760405162461bcd60e51b815260206004820152601a60248201527f77726f6e67206c69712e2072656d6f76696e6720706172616d7300000000000060448201526064016104e5565b610679338a610d63565b604051339083156108fc029084906000818181858888f193505050501580156106a6573d6000803e3d6000fd5b5060055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156106f357600080fd5b505af1158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190611068565b50909890975095505050505050565b60606004805461033c906111b6565b60008061075560025490565b905080156108f157600084116107a55760405162461bcd60e51b81526020600482015260156024820152746e6f7420656e6f756768206c69717569646974792160581b60448201526064016104e5565b60006107b1344761119f565b905060006107bd6103bf565b90506000826107cc3484611180565b6107d6919061115e565b90506000836107e53487611180565b6107ef919061115e565b90508187101580156108015750878110155b61084d5760405162461bcd60e51b815260206004820152601a60248201527f77726f6e67206c69712e2070726f766964657220706172616d7300000000000060448201526064016104e5565b6005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b039091169081906323b872dd90606401602060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190611068565b506108e43383610eb2565b5094506104519350505050565b6005546001600160a01b03161580159061090f5750633b9aca003410155b61091857600080fd5b6005546040516323b872dd60e01b815233600482015230602482015260448101859052849147916001600160a01b039091169081906323b872dd90606401602060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190611068565b506109b33383610eb2565b509250610451915050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610a405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e5565b610a4f33856104fd868561119f565b5060019392505050565b600061044d338484610b8b565b6001600160a01b038316610ac85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e5565b6001600160a01b038216610b295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610bef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e5565b6001600160a01b038216610c515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e5565b6001600160a01b03831660009081526020819052604090205481811015610cc95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e5565b610cd3828261119f565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610d09908490611146565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d5591815260200190565b60405180910390a350505050565b6001600160a01b038216610dc35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e5565b6001600160a01b03821660009081526020819052604090205481811015610e375760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e5565b610e41828261119f565b6001600160a01b03841660009081526020819052604081209190915560028054849290610e6f90849061119f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610b7e565b6001600160a01b038216610f085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e5565b8060026000828254610f1a9190611146565b90915550506001600160a01b03821660009081526020819052604081208054839290610f47908490611146565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610fa857600080fd5b919050565b600060208284031215610fbf57600080fd5b610fc882610f91565b9392505050565b60008060408385031215610fe257600080fd5b610feb83610f91565b9150610ff960208401610f91565b90509250929050565b60008060006060848603121561101757600080fd5b61102084610f91565b925061102e60208501610f91565b9150604084013590509250925092565b6000806040838503121561105157600080fd5b61105a83610f91565b946020939093013593505050565b60006020828403121561107a57600080fd5b81518015158114610fc857600080fd5b60006020828403121561109c57600080fd5b5051919050565b600080604083850312156110b657600080fd5b50508035926020909101359150565b6000806000606084860312156110da57600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b8181101561111e57858101830151858201604001528201611102565b81811115611130576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115611159576111596111f1565b500190565b60008261117b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561119a5761119a6111f1565b500290565b6000828210156111b1576111b16111f1565b500390565b600181811c908216806111ca57607f821691505b602082108114156111eb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207b848a97bba8a066ac0d5b243f9c836832fc059d06413b7d161accc9c2bcd63164736f6c63430008060033",
  "bytecodeSha1": "a00c600f2b0879795793599f7531244f90e88cf7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Exchange",
  "coverageMap": {
    "branches": {
      "1": {},
      "4": {
        "Exchange.addLiquidity": {
          "23": [
            670,
            689,
            false
          ],
          "24": [
            707,
            724,
            true
          ],
          "25": [
            1023,
            1049,
            false
          ],
          "26": [
            1053,
            1086,
            true
          ],
          "27": [
            1337,
            1364,
            false
          ],
          "28": [
            1368,
            1391,
            true
          ]
        },
        "Exchange.removeLiquidity": {
          "17": [
            1817,
            1827,
            false
          ],
          "18": [
            1831,
            1842,
            false
          ],
          "19": [
            1846,
            1860,
            true
          ],
          "20": [
            1920,
            1939,
            true
          ],
          "21": [
            2182,
            2203,
            false
          ],
          "22": [
            2207,
            2233,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "4": {
        "Exchange.addLiquidity": {
          "8": [
            699,
            750
          ],
          "9": [
            1015,
            1117
          ],
          "10": [
            1169,
            1228
          ],
          "11": [
            1237,
            1272
          ],
          "12": [
            1280,
            1303
          ],
          "13": [
            1329,
            1392
          ],
          "14": [
            1542,
            1601
          ],
          "15": [
            1610,
            1645
          ],
          "16": [
            1653,
            1676
          ]
        },
        "Exchange.getReserves": {
          "0": [
            454,
            507
          ]
        },
        "Exchange.removeLiquidity": {
          "1": [
            1809,
            1861
          ],
          "2": [
            1912,
            1980
          ],
          "3": [
            2174,
            2264
          ],
          "4": [
            2271,
            2296
          ],
          "5": [
            2302,
            2342
          ],
          "6": [
            2348,
            2404
          ],
          "7": [
            2411,
            2444
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20"
  ],
  "deployedBytecode": "6080604052600436106100e85760003560e01c806370a082311161008a5780639cd441da116100595780639cd441da14610294578063a457c2d7146102a7578063a9059cbb146102c7578063dd62ed3e146102e757600080fd5b806370a08231146101dc578063857620e1146102125780638c8e8fee1461024757806395d89b411461027f57600080fd5b806318160ddd116100c657806318160ddd1461016b57806323b872dd14610180578063313ce567146101a057806339509351146101bc57600080fd5b806306fdde03146100ed5780630902f1ac14610118578063095ea7b31461013b575b600080fd5b3480156100f957600080fd5b5061010261032d565b60405161010f91906110f1565b60405180910390f35b34801561012457600080fd5b5061012d6103bf565b60405190815260200161010f565b34801561014757600080fd5b5061015b61015636600461103e565b610440565b604051901515815260200161010f565b34801561017757600080fd5b5060025461012d565b34801561018c57600080fd5b5061015b61019b366004611002565b610457565b3480156101ac57600080fd5b506040516012815260200161010f565b3480156101c857600080fd5b5061015b6101d736600461103e565b61050d565b3480156101e857600080fd5b5061012d6101f7366004610fad565b6001600160a01b031660009081526020819052604090205490565b34801561021e57600080fd5b5061023261022d3660046110c5565b610544565b6040805192835260208301919091520161010f565b34801561025357600080fd5b50600554610267906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b34801561028b57600080fd5b5061010261073a565b61012d6102a23660046110a3565b610749565b3480156102b357600080fd5b5061015b6102c236600461103e565b6109be565b3480156102d357600080fd5b5061015b6102e236600461103e565b610a59565b3480156102f357600080fd5b5061012d610302366004610fcf565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461033c906111b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906111b6565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b5050505050905090565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561040357600080fd5b505afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b919061108a565b905090565b600061044d338484610a66565b5060015b92915050565b6000610464848484610b8b565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104ee5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61050285336104fd868561119f565b610a66565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161044d9185906104fd908690611146565b6000806000851180156105575750600084115b80156105635750600083115b61056c57600080fd5b600061057760025490565b9050600081116105d55760405162461bcd60e51b8152602060048201526024808201527f6c6971756964697479206d75737420626520706f73697469766520746f2072656044820152636d6f766560e01b60648201526084016104e5565b60006105df6103bf565b90506000826105ee478a611180565b6105f8919061115e565b9050600083610607848b611180565b610611919061115e565b90508782101580156106235750868110155b61066f5760405162461bcd60e51b815260206004820152601a60248201527f77726f6e67206c69712e2072656d6f76696e6720706172616d7300000000000060448201526064016104e5565b610679338a610d63565b604051339083156108fc029084906000818181858888f193505050501580156106a6573d6000803e3d6000fd5b5060055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156106f357600080fd5b505af1158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190611068565b50909890975095505050505050565b60606004805461033c906111b6565b60008061075560025490565b905080156108f157600084116107a55760405162461bcd60e51b81526020600482015260156024820152746e6f7420656e6f756768206c69717569646974792160581b60448201526064016104e5565b60006107b1344761119f565b905060006107bd6103bf565b90506000826107cc3484611180565b6107d6919061115e565b90506000836107e53487611180565b6107ef919061115e565b90508187101580156108015750878110155b61084d5760405162461bcd60e51b815260206004820152601a60248201527f77726f6e67206c69712e2070726f766964657220706172616d7300000000000060448201526064016104e5565b6005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b039091169081906323b872dd90606401602060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190611068565b506108e43383610eb2565b5094506104519350505050565b6005546001600160a01b03161580159061090f5750633b9aca003410155b61091857600080fd5b6005546040516323b872dd60e01b815233600482015230602482015260448101859052849147916001600160a01b039091169081906323b872dd90606401602060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190611068565b506109b33383610eb2565b509250610451915050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610a405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e5565b610a4f33856104fd868561119f565b5060019392505050565b600061044d338484610b8b565b6001600160a01b038316610ac85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e5565b6001600160a01b038216610b295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610bef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e5565b6001600160a01b038216610c515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e5565b6001600160a01b03831660009081526020819052604090205481811015610cc95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e5565b610cd3828261119f565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610d09908490611146565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d5591815260200190565b60405180910390a350505050565b6001600160a01b038216610dc35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e5565b6001600160a01b03821660009081526020819052604090205481811015610e375760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e5565b610e41828261119f565b6001600160a01b03841660009081526020819052604081209190915560028054849290610e6f90849061119f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610b7e565b6001600160a01b038216610f085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e5565b8060026000828254610f1a9190611146565b90915550506001600160a01b03821660009081526020819052604081208054839290610f47908490611146565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610fa857600080fd5b919050565b600060208284031215610fbf57600080fd5b610fc882610f91565b9392505050565b60008060408385031215610fe257600080fd5b610feb83610f91565b9150610ff960208401610f91565b90509250929050565b60008060006060848603121561101757600080fd5b61102084610f91565b925061102e60208501610f91565b9150604084013590509250925092565b6000806040838503121561105157600080fd5b61105a83610f91565b946020939093013593505050565b60006020828403121561107a57600080fd5b81518015158114610fc857600080fd5b60006020828403121561109c57600080fd5b5051919050565b600080604083850312156110b657600080fd5b50508035926020909101359150565b6000806000606084860312156110da57600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b8181101561111e57858101830151858201604001528201611102565b81811115611130576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115611159576111596111f1565b500190565b60008261117b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561119a5761119a6111f1565b500290565b6000828210156111b1576111b16111f1565b500390565b600181811c908216806111ca57607f821691505b602082108114156111eb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207b848a97bba8a066ac0d5b243f9c836832fc059d06413b7d161accc9c2bcd63164736f6c63430008060033",
  "deployedSourceMap": "171:2280:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;395:117:4;;;;;;;;;;;;;:::i;:::-;;;9562:25:5;;;9550:2;9535:18;395:117:4;9517:76:5;4174:166:0;;;;;;;;;;-1:-1:-1;4174:166:0;;;;;:::i;:::-;;:::i;:::-;;;3317:14:5;;3310:22;3292:41;;3280:2;3265:18;4174:166:0;3247:92:5;3165:106:0;;;;;;;;;;-1:-1:-1;3252:12:0;;3165:106;;4807:414;;;;;;;;;;-1:-1:-1;4807:414:0;;;;;:::i;:::-;;:::i;3014:91::-;;;;;;;;;;-1:-1:-1;3014:91:0;;3096:2;9993:36:5;;9981:2;9966:18;3014:91:0;9948:87:5;5616:212:0;;;;;;;;;;-1:-1:-1;5616:212:0;;;;;:::i;:::-;;:::i;3329:125::-;;;;;;;;;;-1:-1:-1;3329:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:0;3403:7;3429:18;;;;;;;;;;;;3329:125;1691:758:4;;;;;;;;;;-1:-1:-1;1691:758:4;;;;;:::i;:::-;;:::i;:::-;;;;9772:25:5;;;9828:2;9813:18;;9806:34;;;;9745:18;1691:758:4;9727:119:5;202:28:4;;;;;;;;;;-1:-1:-1;202:28:4;;;;-1:-1:-1;;;;;202:28:4;;;;;;-1:-1:-1;;;;;2449:32:5;;;2431:51;;2419:2;2404:18;202:28:4;2386:102:5;2288::0;;;;;;;;;;;;;:::i;516:1171:4:-;;;;;;:::i;:::-;;:::i;6315:371:0:-;;;;;;;;;;-1:-1:-1;6315:371:0;;;;;:::i;:::-;;:::i;3657:172::-;;;;;;;;;;-1:-1:-1;3657:172:0;;;;;:::i;:::-;;:::i;3887:149::-;;;;;;;;;;-1:-1:-1;3887:149:0;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:0;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;2077:98;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;395:117:4:-;468:13;;461:46;;-1:-1:-1;;;461:46:4;;501:4;461:46;;;2431:51:5;439:7:4;;-1:-1:-1;;;;;468:13:4;;461:31;;2404:18:5;;461:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;454:53;;395:117;:::o;4174:166:0:-;4257:4;4273:39;665:10:3;4296:7:0;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:0;4174:166;;;;;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:0;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:3;5003:33:0;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;5046:79:0;;6120:2:5;5046:79:0;;;6102:21:5;6159:2;6139:18;;;6132:30;6198:34;6178:18;;;6171:62;-1:-1:-1;;;6249:18:5;;;6242:38;6297:19;;5046:79:0;;;;;;;;;5135:57;5144:6;665:10:3;5166:25:0;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;-1:-1:-1;5210:4:0;;4807:414;-1:-1:-1;;;;4807:414:0:o;5616:212::-;665:10:3;5704:4:0;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:0;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;1691:758:4:-;1785:7;1794;1826:1;1817:6;:10;:25;;;;;1841:1;1831:7;:11;1817:25;:43;;;;;1859:1;1846:10;:14;1817:43;1809:52;;;;;;1867:23;1893:13;3252:12:0;;;3165:106;1893:13:4;1867:39;;1938:1;1920:15;:19;1912:68;;;;-1:-1:-1;;;1912:68:4;;8447:2:5;1912:68:4;;;8429:21:5;8486:2;8466:18;;;8459:30;8525:34;8505:18;;;8498:62;-1:-1:-1;;;8576:18:5;;;8569:34;8620:19;;1912:68:4;8419:226:5;1912:68:4;1987:21;2011:13;:11;:13::i;:::-;1987:37;-1:-1:-1;2030:18:4;2084:15;2051:30;2060:21;2051:6;:30;:::i;:::-;:48;;;;:::i;:::-;2030:69;-1:-1:-1;2105:20:4;2153:15;2128:22;2137:13;2128:6;:22;:::i;:::-;:40;;;;:::i;:::-;2105:63;;2196:7;2182:10;:21;;:51;;;;;2223:10;2207:12;:26;;2182:51;2174:90;;;;-1:-1:-1;;;2174:90:4;;8092:2:5;2174:90:4;;;8074:21:5;8131:2;8111:18;;;8104:30;8170:28;8150:18;;;8143:56;8216:18;;2174:90:4;8064:176:5;2174:90:4;2271:25;2277:10;2289:6;2271:5;:25::i;:::-;2302:40;;2310:10;;2302:40;;;;;2331:10;;2302:40;;;;2331:10;2310;2302:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2355:13:4;;2348:56;;-1:-1:-1;;;2348:56:4;;2379:10;2348:56;;;3047:51:5;3114:18;;;3107:34;;;-1:-1:-1;;;;;2355:13:4;;;;2348:30;;3020:18:5;;2348:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2419:10:4;;;;-1:-1:-1;1691:758:4;-1:-1:-1;;;;;;1691:758:4:o;2288:102:0:-;2344:13;2376:7;2369:14;;;;;:::i;516:1171:4:-;605:7;620:23;646:13;3252:12:0;;;3165:106;646:13:4;620:39;-1:-1:-1;670:19:4;;666:1017;;723:1;707:13;:17;699:51;;;;-1:-1:-1;;;699:51:4;;7337:2:5;699:51:4;;;7319:21:5;7376:2;7356:18;;;7349:30;-1:-1:-1;;;7395:18:5;;;7388:51;7456:18;;699:51:4;7309:171:5;699:51:4;759:19;781:33;805:9;781:21;:33;:::i;:::-;759:55;;822:21;846:13;:11;:13::i;:::-;822:37;-1:-1:-1;868:20:4;919:11;891:25;907:9;822:37;891:25;:::i;:::-;:39;;;;:::i;:::-;868:62;-1:-1:-1;938:24:4;995:11;965:27;983:9;965:15;:27;:::i;:::-;:41;;;;:::i;:::-;938:68;;1037:12;1023:10;:26;;:63;;;;;1073:13;1053:16;:33;;1023:63;1015:102;;;;-1:-1:-1;;;1015:102:4;;5765:2:5;1015:102:4;;;5747:21:5;5804:2;5784:18;;;5777:30;5843:28;5823:18;;;5816:56;5889:18;;1015:102:4;5737:176:5;1015:102:4;1147:13;;1169:59;;-1:-1:-1;;;1169:59:4;;1188:10;1169:59;;;2733:34:5;1208:4:4;2783:18:5;;;2776:43;2835:18;;;2828:34;;;-1:-1:-1;;;;;1147:13:4;;;;;;1169:18;;2668::5;;1169:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1237:35;1243:10;1255:16;1237:5;:35::i;:::-;-1:-1:-1;1287:16:4;-1:-1:-1;1280:23:4;;-1:-1:-1;;;;1280:23:4;666:1017;1337:13;;-1:-1:-1;;;;;1337:13:4;:27;;;;:54;;;1381:10;1368:9;:23;;1337:54;1329:63;;;;;;1520:13;;1542:59;;-1:-1:-1;;;1542:59:4;;1561:10;1542:59;;;2733:34:5;1581:4:4;2783:18:5;;;2776:43;2835:18;;;2828:34;;;1423:10:4;;1468:21;;-1:-1:-1;;;;;1520:13:4;;;;;;1542:18;;2668::5;;1542:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1610:35;1616:10;1628:16;1610:5;:35::i;:::-;-1:-1:-1;1660:16:4;-1:-1:-1;1653:23:4;;-1:-1:-1;;1653:23:4;6315:371:0;665:10:3;6408:4:0;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:0;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;6495:85:0;;8852:2:5;6495:85:0;;;8834:21:5;8891:2;8871:18;;;8864:30;8930:34;8910:18;;;8903:62;-1:-1:-1;;;8981:18:5;;;8974:35;9026:19;;6495:85:0;8824:227:5;6495:85:0;6590:67;665:10:3;6613:7:0;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:0;;6315:371;-1:-1:-1;;;6315:371:0:o;3657:172::-;3743:4;3759:42;665:10:3;3783:9:0;3794:6;3759:9;:42::i;9579:340::-;-1:-1:-1;;;;;9680:19:0;;9672:68;;;;-1:-1:-1;;;9672:68:0;;7687:2:5;9672:68:0;;;7669:21:5;7726:2;7706:18;;;7699:30;7765:34;7745:18;;;7738:62;-1:-1:-1;;;7816:18:5;;;7809:34;7860:19;;9672:68:0;7659:226:5;9672:68:0;-1:-1:-1;;;;;9758:21:0;;9750:68;;;;-1:-1:-1;;;9750:68:0;;4955:2:5;9750:68:0;;;4937:21:5;4994:2;4974:18;;;4967:30;5033:34;5013:18;;;5006:62;-1:-1:-1;;;5084:18:5;;;5077:32;5126:19;;9750:68:0;4927:224:5;9750:68:0;-1:-1:-1;;;;;9829:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;9562:25:5;;;9880:32:0;;9535:18:5;9880:32:0;;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:0;;7257:70;;;;-1:-1:-1;;;7257:70:0;;6931:2:5;7257:70:0;;;6913:21:5;6970:2;6950:18;;;6943:30;7009:34;6989:18;;;6982:62;-1:-1:-1;;;7060:18:5;;;7053:35;7105:19;;7257:70:0;6903:227:5;7257:70:0;-1:-1:-1;;;;;7345:23:0;;7337:71;;;;-1:-1:-1;;;7337:71:0;;4148:2:5;7337:71:0;;;4130:21:5;4187:2;4167:18;;;4160:30;4226:34;4206:18;;;4199:62;-1:-1:-1;;;4277:18:5;;;4270:33;4320:19;;7337:71:0;4120:225:5;7337:71:0;-1:-1:-1;;;;;7501:17:0;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;7528:74:0;;5358:2:5;7528:74:0;;;5340:21:5;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:5;;;5480:36;5533:19;;7528:74:0;5330:228:5;7528:74:0;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:0;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:0;7719:6;-1:-1:-1;;;;;7710:35:0;;7738:6;7710:35;;;;9562:25:5;;9550:2;9535:18;;9517:76;7710:35:0;;;;;;;;7247:505;7160:592;;;:::o;8673:483::-;-1:-1:-1;;;;;8756:21:0;;8748:67;;;;-1:-1:-1;;;8748:67:0;;6529:2:5;8748:67:0;;;6511:21:5;6568:2;6548:18;;;6541:30;6607:34;6587:18;;;6580:62;-1:-1:-1;;;6658:18:5;;;6651:31;6699:19;;8748:67:0;6501:223:5;8748:67:0;-1:-1:-1;;;;;8911:18:0;;8886:22;8911:18;;;;;;;;;;;8947:24;;;;8939:71;;;;-1:-1:-1;;;8939:71:0;;4552:2:5;8939:71:0;;;4534:21:5;4591:2;4571:18;;;4564:30;4630:34;4610:18;;;4603:62;-1:-1:-1;;;4681:18:5;;;4674:32;4723:19;;8939:71:0;4524:224:5;8939:71:0;9041:23;9058:6;9041:14;:23;:::i;:::-;-1:-1:-1;;;;;9020:18:0;;:9;:18;;;;;;;;;;:44;;;;9074:12;:22;;9090:6;;9020:9;9074:22;;9090:6;;9074:22;:::i;:::-;;;;-1:-1:-1;;9112:37:0;;9562:25:5;;;9138:1:0;;-1:-1:-1;;;;;9112:37:0;;;;;9550:2:5;9535:18;9112:37:0;9517:76:5;8023:330:0;-1:-1:-1;;;;;8106:21:0;;8098:65;;;;-1:-1:-1;;;8098:65:0;;9258:2:5;8098:65:0;;;9240:21:5;9297:2;9277:18;;;9270:30;9336:33;9316:18;;;9309:61;9387:18;;8098:65:0;9230:181:5;8098:65:0;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:0;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:0;;9562:25:5;;;-1:-1:-1;;;;;8309:37:0;;;8326:1;;8309:37;;9550:2:5;9535:18;8309:37:0;;;;;;;8023:330;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:5:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:5:o;1240:277::-;1307:6;1360:2;1348:9;1339:7;1335:23;1331:32;1328:2;;;1376:1;1373;1366:12;1328:2;1408:9;1402:16;1461:5;1454:13;1447:21;1440:5;1437:32;1427:2;;1483:1;1480;1473:12;1522:184;1592:6;1645:2;1633:9;1624:7;1620:23;1616:32;1613:2;;;1661:1;1658;1651:12;1613:2;-1:-1:-1;1684:16:5;;1603:103;-1:-1:-1;1603:103:5:o;1711:248::-;1779:6;1787;1840:2;1828:9;1819:7;1815:23;1811:32;1808:2;;;1856:1;1853;1846:12;1808:2;-1:-1:-1;;1879:23:5;;;1949:2;1934:18;;;1921:32;;-1:-1:-1;1798:161:5:o;1964:316::-;2041:6;2049;2057;2110:2;2098:9;2089:7;2085:23;2081:32;2078:2;;;2126:1;2123;2116:12;2078:2;-1:-1:-1;;2149:23:5;;;2219:2;2204:18;;2191:32;;-1:-1:-1;2270:2:5;2255:18;;;2242:32;;2068:212;-1:-1:-1;2068:212:5:o;3344:597::-;3456:4;3485:2;3514;3503:9;3496:21;3546:6;3540:13;3589:6;3584:2;3573:9;3569:18;3562:34;3614:1;3624:140;3638:6;3635:1;3632:13;3624:140;;;3733:14;;;3729:23;;3723:30;3699:17;;;3718:2;3695:26;3688:66;3653:10;;3624:140;;;3782:6;3779:1;3776:13;3773:2;;;3852:1;3847:2;3838:6;3827:9;3823:22;3819:31;3812:42;3773:2;-1:-1:-1;3925:2:5;3904:15;-1:-1:-1;;3900:29:5;3885:45;;;;3932:2;3881:54;;3465:476;-1:-1:-1;;;3465:476:5:o;10040:128::-;10080:3;10111:1;10107:6;10104:1;10101:13;10098:2;;;10117:18;;:::i;:::-;-1:-1:-1;10153:9:5;;10088:80::o;10173:217::-;10213:1;10239;10229:2;;10283:10;10278:3;10274:20;10271:1;10264:31;10318:4;10315:1;10308:15;10346:4;10343:1;10336:15;10229:2;-1:-1:-1;10375:9:5;;10219:171::o;10395:168::-;10435:7;10501:1;10497;10493:6;10489:14;10486:1;10483:21;10478:1;10471:9;10464:17;10460:45;10457:2;;;10508:18;;:::i;:::-;-1:-1:-1;10548:9:5;;10447:116::o;10568:125::-;10608:4;10636:1;10633;10630:8;10627:2;;;10641:18;;:::i;:::-;-1:-1:-1;10678:9:5;;10617:76::o;10698:380::-;10777:1;10773:12;;;;10820;;;10841:2;;10895:4;10887:6;10883:17;10873:27;;10841:2;10948;10940:6;10937:14;10917:18;10914:38;10911:2;;;10994:10;10989:3;10985:20;10982:1;10975:31;11029:4;11026:1;11019:15;11057:4;11054:1;11047:15;10911:2;;10753:325;;;:::o;11083:127::-;11144:10;11139:3;11135:20;11132:1;11125:31;11175:4;11172:1;11165:15;11199:4;11196:1;11189:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    171,
    2451
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x857620E1 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x8C8E8FEE EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x12D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x10F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x12D PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x103E JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x11B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D CALLER DUP5 DUP5 PUSH2 0xA66 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464 DUP5 DUP5 DUP5 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x502 DUP6 CALLER PUSH2 0x4FD DUP7 DUP6 PUSH2 0x119F JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x44D SWAP2 DUP6 SWAP1 PUSH2 0x4FD SWAP1 DUP7 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x557 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST DUP1 ISZERO PUSH2 0x563 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x577 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x6C6971756964697479206D75737420626520706F73697469766520746F207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D6F7665 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DF PUSH2 0x3BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x5EE SELFBALANCE DUP11 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x607 DUP5 DUP12 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST SWAP1 POP DUP8 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI POP DUP7 DUP2 LT ISZERO JUMPDEST PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206C69712E2072656D6F76696E6720706172616D73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x679 CALLER DUP11 PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x707 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x1068 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x755 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6E6F7420656E6F756768206C697175696469747921 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 CALLVALUE SELFBALANCE PUSH2 0x119F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7BD PUSH2 0x3BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x7CC CALLVALUE DUP5 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x7E5 CALLVALUE DUP8 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST SWAP1 POP DUP2 DUP8 LT ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI POP DUP8 DUP2 LT ISZERO JUMPDEST PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206C69712E2070726F766964657220706172616D73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x1068 JUMP JUMPDEST POP PUSH2 0x8E4 CALLER DUP4 PUSH2 0xEB2 JUMP JUMPDEST POP SWAP5 POP PUSH2 0x451 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x90F JUMPI POP PUSH4 0x3B9ACA00 CALLVALUE LT ISZERO JUMPDEST PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE DUP5 SWAP2 SELFBALANCE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x984 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x1068 JUMP JUMPDEST POP PUSH2 0x9B3 CALLER DUP4 PUSH2 0xEB2 JUMP JUMPDEST POP SWAP3 POP PUSH2 0x451 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0xA4F CALLER DUP6 PUSH2 0x4FD DUP7 DUP6 PUSH2 0x119F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D CALLER DUP5 DUP5 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0xCD3 DUP3 DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD09 SWAP1 DUP5 SWAP1 PUSH2 0x1146 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD55 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0xE41 DUP3 DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xE6F SWAP1 DUP5 SWAP1 PUSH2 0x119F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF47 SWAP1 DUP5 SWAP1 PUSH2 0x1146 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC8 DUP3 PUSH2 0xF91 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFEB DUP4 PUSH2 0xF91 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF9 PUSH1 0x20 DUP5 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1020 DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP3 POP PUSH2 0x102E PUSH1 0x20 DUP6 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x105A DUP4 PUSH2 0xF91 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x111E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1102 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1130 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1159 JUMPI PUSH2 0x1159 PUSH2 0x11F1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x117B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x119A JUMPI PUSH2 0x119A PUSH2 0x11F1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11B1 JUMPI PUSH2 0x11B1 PUSH2 0x11F1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11EB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x848A97BBA8A066AC0D5B243F9C836832FC059D06413B7D161ACCC9C2 0xBC 0xD6 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "LT",
      "path": "4"
    },
    "9": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE8"
    },
    "12": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "SHR",
      "path": "4"
    },
    "19": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "20": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "25": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "GT",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "30": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "31": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9CD441DA"
    },
    "36": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "GT",
      "path": "4"
    },
    "37": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "41": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "42": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9CD441DA"
    },
    "47": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "48": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x294"
    },
    "51": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "52": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "53": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "58": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "59": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A7"
    },
    "62": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "63": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "64": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "69": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "70": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C7"
    },
    "73": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "74": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "75": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "80": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "81": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E7"
    },
    "84": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "85": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "REVERT",
      "path": "4"
    },
    "89": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "91": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "96": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "97": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DC"
    },
    "100": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "102": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x857620E1"
    },
    "107": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "108": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x212"
    },
    "111": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8C8E8FEE"
    },
    "118": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "119": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x247"
    },
    "122": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "129": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "130": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27F"
    },
    "133": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "134": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "REVERT",
      "path": "4"
    },
    "138": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "139": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "140": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "145": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "GT",
      "path": "4"
    },
    "146": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "150": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "151": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "156": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "157": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16B"
    },
    "160": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "161": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "162": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "167": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "168": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x180"
    },
    "171": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "172": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "173": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "178": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "179": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A0"
    },
    "182": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "183": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "184": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "189": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "190": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BC"
    },
    "193": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "194": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "REVERT",
      "path": "4"
    },
    "198": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "199": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "200": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "205": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "206": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "209": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "210": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "211": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x902F1AC"
    },
    "216": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "217": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x118"
    },
    "220": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "221": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "222": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "227": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "EQ",
      "path": "4"
    },
    "228": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13B"
    },
    "231": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "232": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "233": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "235": {
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "DUP1",
      "path": "4"
    },
    "236": {
      "first_revert": true,
      "fn": null,
      "offset": [
        171,
        2451
      ],
      "op": "REVERT",
      "path": "4"
    },
    "237": {
      "op": "JUMPDEST"
    },
    "238": {
      "op": "CALLVALUE"
    },
    "239": {
      "op": "DUP1"
    },
    "240": {
      "op": "ISZERO"
    },
    "241": {
      "op": "PUSH2",
      "value": "0xF9"
    },
    "244": {
      "op": "JUMPI"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "247": {
      "op": "DUP1"
    },
    "248": {
      "op": "REVERT"
    },
    "249": {
      "op": "JUMPDEST"
    },
    "250": {
      "op": "POP"
    },
    "251": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "254": {
      "op": "PUSH2",
      "value": "0x32D"
    },
    "257": {
      "jump": "i",
      "op": "JUMP"
    },
    "258": {
      "op": "JUMPDEST"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "261": {
      "op": "MLOAD"
    },
    "262": {
      "op": "PUSH2",
      "value": "0x10F"
    },
    "265": {
      "op": "SWAP2"
    },
    "266": {
      "op": "SWAP1"
    },
    "267": {
      "op": "PUSH2",
      "value": "0x10F1"
    },
    "270": {
      "jump": "i",
      "op": "JUMP"
    },
    "271": {
      "op": "JUMPDEST"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "274": {
      "op": "MLOAD"
    },
    "275": {
      "op": "DUP1"
    },
    "276": {
      "op": "SWAP2"
    },
    "277": {
      "op": "SUB"
    },
    "278": {
      "op": "SWAP1"
    },
    "279": {
      "op": "RETURN"
    },
    "280": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "281": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "282": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "283": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "284": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124"
    },
    "287": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "288": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "290": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "291": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "REVERT",
      "path": "4"
    },
    "292": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "293": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "POP",
      "path": "4"
    },
    "294": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12D"
    },
    "297": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BF"
    },
    "300": {
      "fn": "Exchange.getReserves",
      "jump": "i",
      "offset": [
        395,
        512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "301": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "302": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "304": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "305": {
      "op": "SWAP1"
    },
    "306": {
      "op": "DUP2"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "op": "ADD"
    },
    "311": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10F"
    },
    "314": {
      "op": "JUMP"
    },
    "315": {
      "op": "JUMPDEST"
    },
    "316": {
      "op": "CALLVALUE"
    },
    "317": {
      "op": "DUP1"
    },
    "318": {
      "op": "ISZERO"
    },
    "319": {
      "op": "PUSH2",
      "value": "0x147"
    },
    "322": {
      "op": "JUMPI"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "325": {
      "op": "DUP1"
    },
    "326": {
      "op": "REVERT"
    },
    "327": {
      "op": "JUMPDEST"
    },
    "328": {
      "op": "POP"
    },
    "329": {
      "op": "PUSH2",
      "value": "0x15B"
    },
    "332": {
      "op": "PUSH2",
      "value": "0x156"
    },
    "335": {
      "op": "CALLDATASIZE"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "338": {
      "op": "PUSH2",
      "value": "0x103E"
    },
    "341": {
      "jump": "i",
      "op": "JUMP"
    },
    "342": {
      "op": "JUMPDEST"
    },
    "343": {
      "op": "PUSH2",
      "value": "0x440"
    },
    "346": {
      "jump": "i",
      "op": "JUMP"
    },
    "347": {
      "op": "JUMPDEST"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "350": {
      "op": "MLOAD"
    },
    "351": {
      "op": "SWAP1"
    },
    "352": {
      "op": "ISZERO"
    },
    "353": {
      "op": "ISZERO"
    },
    "354": {
      "op": "DUP2"
    },
    "355": {
      "op": "MSTORE"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "358": {
      "op": "ADD"
    },
    "359": {
      "op": "PUSH2",
      "value": "0x10F"
    },
    "362": {
      "op": "JUMP"
    },
    "363": {
      "op": "JUMPDEST"
    },
    "364": {
      "op": "CALLVALUE"
    },
    "365": {
      "op": "DUP1"
    },
    "366": {
      "op": "ISZERO"
    },
    "367": {
      "op": "PUSH2",
      "value": "0x177"
    },
    "370": {
      "op": "JUMPI"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "373": {
      "op": "DUP1"
    },
    "374": {
      "op": "REVERT"
    },
    "375": {
      "op": "JUMPDEST"
    },
    "376": {
      "op": "POP"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "379": {
      "op": "SLOAD"
    },
    "380": {
      "op": "PUSH2",
      "value": "0x12D"
    },
    "383": {
      "op": "JUMP"
    },
    "384": {
      "op": "JUMPDEST"
    },
    "385": {
      "op": "CALLVALUE"
    },
    "386": {
      "op": "DUP1"
    },
    "387": {
      "op": "ISZERO"
    },
    "388": {
      "op": "PUSH2",
      "value": "0x18C"
    },
    "391": {
      "op": "JUMPI"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "394": {
      "op": "DUP1"
    },
    "395": {
      "op": "REVERT"
    },
    "396": {
      "op": "JUMPDEST"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "op": "PUSH2",
      "value": "0x15B"
    },
    "401": {
      "op": "PUSH2",
      "value": "0x19B"
    },
    "404": {
      "op": "CALLDATASIZE"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "407": {
      "op": "PUSH2",
      "value": "0x1002"
    },
    "410": {
      "jump": "i",
      "op": "JUMP"
    },
    "411": {
      "op": "JUMPDEST"
    },
    "412": {
      "op": "PUSH2",
      "value": "0x457"
    },
    "415": {
      "jump": "i",
      "op": "JUMP"
    },
    "416": {
      "op": "JUMPDEST"
    },
    "417": {
      "op": "CALLVALUE"
    },
    "418": {
      "op": "DUP1"
    },
    "419": {
      "op": "ISZERO"
    },
    "420": {
      "op": "PUSH2",
      "value": "0x1AC"
    },
    "423": {
      "op": "JUMPI"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "426": {
      "op": "DUP1"
    },
    "427": {
      "op": "REVERT"
    },
    "428": {
      "op": "JUMPDEST"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "432": {
      "op": "MLOAD"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "op": "PUSH2",
      "value": "0x10F"
    },
    "443": {
      "op": "JUMP"
    },
    "444": {
      "op": "JUMPDEST"
    },
    "445": {
      "op": "CALLVALUE"
    },
    "446": {
      "op": "DUP1"
    },
    "447": {
      "op": "ISZERO"
    },
    "448": {
      "op": "PUSH2",
      "value": "0x1C8"
    },
    "451": {
      "op": "JUMPI"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "454": {
      "op": "DUP1"
    },
    "455": {
      "op": "REVERT"
    },
    "456": {
      "op": "JUMPDEST"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "op": "PUSH2",
      "value": "0x15B"
    },
    "461": {
      "op": "PUSH2",
      "value": "0x1D7"
    },
    "464": {
      "op": "CALLDATASIZE"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "467": {
      "op": "PUSH2",
      "value": "0x103E"
    },
    "470": {
      "jump": "i",
      "op": "JUMP"
    },
    "471": {
      "op": "JUMPDEST"
    },
    "472": {
      "op": "PUSH2",
      "value": "0x50D"
    },
    "475": {
      "jump": "i",
      "op": "JUMP"
    },
    "476": {
      "op": "JUMPDEST"
    },
    "477": {
      "op": "CALLVALUE"
    },
    "478": {
      "op": "DUP1"
    },
    "479": {
      "op": "ISZERO"
    },
    "480": {
      "op": "PUSH2",
      "value": "0x1E8"
    },
    "483": {
      "op": "JUMPI"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "486": {
      "op": "DUP1"
    },
    "487": {
      "op": "REVERT"
    },
    "488": {
      "op": "JUMPDEST"
    },
    "489": {
      "op": "POP"
    },
    "490": {
      "op": "PUSH2",
      "value": "0x12D"
    },
    "493": {
      "op": "PUSH2",
      "value": "0x1F7"
    },
    "496": {
      "op": "CALLDATASIZE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "499": {
      "op": "PUSH2",
      "value": "0xFAD"
    },
    "502": {
      "jump": "i",
      "op": "JUMP"
    },
    "503": {
      "op": "JUMPDEST"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "510": {
      "op": "SHL"
    },
    "511": {
      "op": "SUB"
    },
    "512": {
      "op": "AND"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "515": {
      "op": "SWAP1"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "520": {
      "op": "DUP2"
    },
    "521": {
      "op": "SWAP1"
    },
    "522": {
      "op": "MSTORE"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "525": {
      "op": "SWAP1"
    },
    "526": {
      "op": "KECCAK256"
    },
    "527": {
      "op": "SLOAD"
    },
    "528": {
      "op": "SWAP1"
    },
    "529": {
      "op": "JUMP"
    },
    "530": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "531": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "532": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "DUP1",
      "path": "4"
    },
    "533": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "534": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21E"
    },
    "537": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "538": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "540": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "DUP1",
      "path": "4"
    },
    "541": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "REVERT",
      "path": "4"
    },
    "542": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x232"
    },
    "547": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22D"
    },
    "550": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "551": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "553": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C5"
    },
    "556": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMP",
      "path": "4"
    },
    "557": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "558": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x544"
    },
    "561": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMP",
      "path": "4"
    },
    "562": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "563": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "565": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "DUP1",
      "path": "4"
    },
    "566": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "567": {
      "op": "SWAP3"
    },
    "568": {
      "op": "DUP4"
    },
    "569": {
      "op": "MSTORE"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "572": {
      "op": "DUP4"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "op": "SWAP2"
    },
    "575": {
      "op": "SWAP1"
    },
    "576": {
      "op": "SWAP2"
    },
    "577": {
      "op": "MSTORE"
    },
    "578": {
      "op": "ADD"
    },
    "579": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10F"
    },
    "582": {
      "op": "JUMP"
    },
    "583": {
      "offset": [
        202,
        230
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "584": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "585": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "DUP1",
      "path": "4"
    },
    "586": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "587": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x253"
    },
    "590": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "591": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "593": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "DUP1",
      "path": "4"
    },
    "594": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "REVERT",
      "path": "4"
    },
    "595": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "offset": [
        202,
        230
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "599": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "600": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x267"
    },
    "603": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "610": {
      "op": "SHL"
    },
    "611": {
      "op": "SUB"
    },
    "612": {
      "offset": [
        202,
        230
      ],
      "op": "AND",
      "path": "4"
    },
    "613": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "DUP2",
      "path": "4"
    },
    "614": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "JUMP",
      "path": "4"
    },
    "615": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "616": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "618": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        202,
        230
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "op": "SWAP1"
    },
    "628": {
      "op": "SWAP2"
    },
    "629": {
      "op": "AND"
    },
    "630": {
      "op": "DUP2"
    },
    "631": {
      "op": "MSTORE"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "offset": [
        202,
        230
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10F"
    },
    "638": {
      "op": "JUMP"
    },
    "639": {
      "op": "JUMPDEST"
    },
    "640": {
      "op": "CALLVALUE"
    },
    "641": {
      "op": "DUP1"
    },
    "642": {
      "op": "ISZERO"
    },
    "643": {
      "op": "PUSH2",
      "value": "0x28B"
    },
    "646": {
      "op": "JUMPI"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "649": {
      "op": "DUP1"
    },
    "650": {
      "op": "REVERT"
    },
    "651": {
      "op": "JUMPDEST"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "656": {
      "op": "PUSH2",
      "value": "0x73A"
    },
    "659": {
      "jump": "i",
      "op": "JUMP"
    },
    "660": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "661": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12D"
    },
    "664": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A2"
    },
    "667": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "668": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "670": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10A3"
    },
    "673": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        516,
        1687
      ],
      "op": "JUMP",
      "path": "4"
    },
    "674": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "675": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x749"
    },
    "678": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        516,
        1687
      ],
      "op": "JUMP",
      "path": "4"
    },
    "679": {
      "op": "JUMPDEST"
    },
    "680": {
      "op": "CALLVALUE"
    },
    "681": {
      "op": "DUP1"
    },
    "682": {
      "op": "ISZERO"
    },
    "683": {
      "op": "PUSH2",
      "value": "0x2B3"
    },
    "686": {
      "op": "JUMPI"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "689": {
      "op": "DUP1"
    },
    "690": {
      "op": "REVERT"
    },
    "691": {
      "op": "JUMPDEST"
    },
    "692": {
      "op": "POP"
    },
    "693": {
      "op": "PUSH2",
      "value": "0x15B"
    },
    "696": {
      "op": "PUSH2",
      "value": "0x2C2"
    },
    "699": {
      "op": "CALLDATASIZE"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "702": {
      "op": "PUSH2",
      "value": "0x103E"
    },
    "705": {
      "jump": "i",
      "op": "JUMP"
    },
    "706": {
      "op": "JUMPDEST"
    },
    "707": {
      "op": "PUSH2",
      "value": "0x9BE"
    },
    "710": {
      "jump": "i",
      "op": "JUMP"
    },
    "711": {
      "op": "JUMPDEST"
    },
    "712": {
      "op": "CALLVALUE"
    },
    "713": {
      "op": "DUP1"
    },
    "714": {
      "op": "ISZERO"
    },
    "715": {
      "op": "PUSH2",
      "value": "0x2D3"
    },
    "718": {
      "op": "JUMPI"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "721": {
      "op": "DUP1"
    },
    "722": {
      "op": "REVERT"
    },
    "723": {
      "op": "JUMPDEST"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "op": "PUSH2",
      "value": "0x15B"
    },
    "728": {
      "op": "PUSH2",
      "value": "0x2E2"
    },
    "731": {
      "op": "CALLDATASIZE"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "734": {
      "op": "PUSH2",
      "value": "0x103E"
    },
    "737": {
      "jump": "i",
      "op": "JUMP"
    },
    "738": {
      "op": "JUMPDEST"
    },
    "739": {
      "op": "PUSH2",
      "value": "0xA59"
    },
    "742": {
      "jump": "i",
      "op": "JUMP"
    },
    "743": {
      "op": "JUMPDEST"
    },
    "744": {
      "op": "CALLVALUE"
    },
    "745": {
      "op": "DUP1"
    },
    "746": {
      "op": "ISZERO"
    },
    "747": {
      "op": "PUSH2",
      "value": "0x2F3"
    },
    "750": {
      "op": "JUMPI"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "753": {
      "op": "DUP1"
    },
    "754": {
      "op": "REVERT"
    },
    "755": {
      "op": "JUMPDEST"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "op": "PUSH2",
      "value": "0x12D"
    },
    "760": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "763": {
      "op": "CALLDATASIZE"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "766": {
      "op": "PUSH2",
      "value": "0xFCF"
    },
    "769": {
      "jump": "i",
      "op": "JUMP"
    },
    "770": {
      "op": "JUMPDEST"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "op": "SWAP2"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "AND"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "784": {
      "op": "SWAP1"
    },
    "785": {
      "op": "DUP2"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "791": {
      "op": "SWAP1"
    },
    "792": {
      "op": "DUP2"
    },
    "793": {
      "op": "MSTORE"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "796": {
      "op": "DUP1"
    },
    "797": {
      "op": "DUP4"
    },
    "798": {
      "op": "KECCAK256"
    },
    "799": {
      "op": "SWAP4"
    },
    "800": {
      "op": "SWAP1"
    },
    "801": {
      "op": "SWAP5"
    },
    "802": {
      "op": "AND"
    },
    "803": {
      "op": "DUP3"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "SWAP2"
    },
    "806": {
      "op": "SWAP1"
    },
    "807": {
      "op": "SWAP2"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "KECCAK256"
    },
    "810": {
      "op": "SLOAD"
    },
    "811": {
      "op": "SWAP1"
    },
    "812": {
      "op": "JUMP"
    },
    "813": {
      "op": "JUMPDEST"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "818": {
      "op": "DUP1"
    },
    "819": {
      "op": "SLOAD"
    },
    "820": {
      "op": "PUSH2",
      "value": "0x33C"
    },
    "823": {
      "op": "SWAP1"
    },
    "824": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "827": {
      "jump": "i",
      "op": "JUMP"
    },
    "828": {
      "op": "JUMPDEST"
    },
    "829": {
      "op": "DUP1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "835": {
      "op": "DUP1"
    },
    "836": {
      "op": "SWAP2"
    },
    "837": {
      "op": "DIV"
    },
    "838": {
      "op": "MUL"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "844": {
      "op": "MLOAD"
    },
    "845": {
      "op": "SWAP1"
    },
    "846": {
      "op": "DUP2"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "850": {
      "op": "MSTORE"
    },
    "851": {
      "op": "DUP1"
    },
    "852": {
      "op": "SWAP3"
    },
    "853": {
      "op": "SWAP2"
    },
    "854": {
      "op": "SWAP1"
    },
    "855": {
      "op": "DUP2"
    },
    "856": {
      "op": "DUP2"
    },
    "857": {
      "op": "MSTORE"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "DUP3"
    },
    "862": {
      "op": "DUP1"
    },
    "863": {
      "op": "SLOAD"
    },
    "864": {
      "op": "PUSH2",
      "value": "0x368"
    },
    "867": {
      "op": "SWAP1"
    },
    "868": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "871": {
      "jump": "i",
      "op": "JUMP"
    },
    "872": {
      "op": "JUMPDEST"
    },
    "873": {
      "op": "DUP1"
    },
    "874": {
      "op": "ISZERO"
    },
    "875": {
      "op": "PUSH2",
      "value": "0x3B5"
    },
    "878": {
      "op": "JUMPI"
    },
    "879": {
      "op": "DUP1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "882": {
      "op": "LT"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x38A"
    },
    "886": {
      "op": "JUMPI"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "890": {
      "op": "DUP1"
    },
    "891": {
      "op": "DUP4"
    },
    "892": {
      "op": "SLOAD"
    },
    "893": {
      "op": "DIV"
    },
    "894": {
      "op": "MUL"
    },
    "895": {
      "op": "DUP4"
    },
    "896": {
      "op": "MSTORE"
    },
    "897": {
      "op": "SWAP2"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "op": "SWAP2"
    },
    "902": {
      "op": "PUSH2",
      "value": "0x3B5"
    },
    "905": {
      "op": "JUMP"
    },
    "906": {
      "op": "JUMPDEST"
    },
    "907": {
      "op": "DUP3"
    },
    "908": {
      "op": "ADD"
    },
    "909": {
      "op": "SWAP2"
    },
    "910": {
      "op": "SWAP1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "918": {
      "op": "KECCAK256"
    },
    "919": {
      "op": "SWAP1"
    },
    "920": {
      "op": "JUMPDEST"
    },
    "921": {
      "op": "DUP2"
    },
    "922": {
      "op": "SLOAD"
    },
    "923": {
      "op": "DUP2"
    },
    "924": {
      "op": "MSTORE"
    },
    "925": {
      "op": "SWAP1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "op": "SWAP1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "DUP1"
    },
    "934": {
      "op": "DUP4"
    },
    "935": {
      "op": "GT"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x398"
    },
    "939": {
      "op": "JUMPI"
    },
    "940": {
      "op": "DUP3"
    },
    "941": {
      "op": "SWAP1"
    },
    "942": {
      "op": "SUB"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "945": {
      "op": "AND"
    },
    "946": {
      "op": "DUP3"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "op": "SWAP2"
    },
    "949": {
      "op": "JUMPDEST"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "op": "POP"
    },
    "953": {
      "op": "POP"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "op": "SWAP1"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "op": "SWAP1"
    },
    "958": {
      "jump": "o",
      "op": "JUMP"
    },
    "959": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "960": {
      "fn": "Exchange.getReserves",
      "offset": [
        468,
        481
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x5"
    },
    "962": {
      "fn": "Exchange.getReserves",
      "offset": [
        468,
        481
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "963": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "965": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "966": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP2",
      "path": "4"
    },
    "975": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "976": {
      "fn": "Exchange.getReserves",
      "offset": [
        501,
        505
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "977": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "979": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP3",
      "path": "4"
    },
    "980": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ADD",
      "path": "4"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "fn": "Exchange.getReserves",
      "offset": [
        439,
        446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "984": {
      "fn": "Exchange.getReserves",
      "offset": [
        439,
        446
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "Exchange.getReserves",
      "offset": [
        468,
        481
      ],
      "op": "AND",
      "path": "4"
    },
    "994": {
      "fn": "Exchange.getReserves",
      "offset": [
        468,
        481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "995": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        492
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "1000": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1006": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1008": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1009": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1010": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1011": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "SUB",
      "path": "4"
    },
    "1012": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1013": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1014": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1015": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1016": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1017": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1018": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1019": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x403"
    },
    "1022": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1023": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1025": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1026": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1027": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1028": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "POP",
      "path": "4"
    },
    "1029": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "GAS",
      "path": "4"
    },
    "1030": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "1031": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1032": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1033": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1034": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x417"
    },
    "1037": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1038": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1039": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1041": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1042": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1043": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1044": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1046": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1047": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1048": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "POP",
      "path": "4"
    },
    "1049": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "POP",
      "path": "4"
    },
    "1050": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "POP",
      "path": "4"
    },
    "1051": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "POP",
      "path": "4"
    },
    "1052": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1054": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1055": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1056": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1058": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "NOT",
      "path": "4"
    },
    "1059": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1061": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1062": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ADD",
      "path": "4"
    },
    "1063": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "AND",
      "path": "4"
    },
    "1064": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1065": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ADD",
      "path": "4"
    },
    "1066": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1067": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1069": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1070": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "POP",
      "path": "4"
    },
    "1071": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1072": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "ADD",
      "path": "4"
    },
    "1073": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1074": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43B"
    },
    "1077": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1078": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1079": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x108A"
    },
    "1082": {
      "fn": "Exchange.getReserves",
      "jump": "i",
      "offset": [
        461,
        507
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1083": {
      "fn": "Exchange.getReserves",
      "offset": [
        461,
        507
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1084": {
      "fn": "Exchange.getReserves",
      "offset": [
        454,
        507
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1085": {
      "fn": "Exchange.getReserves",
      "offset": [
        454,
        507
      ],
      "op": "POP",
      "path": "4"
    },
    "1086": {
      "fn": "Exchange.getReserves",
      "offset": [
        395,
        512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1087": {
      "fn": "Exchange.getReserves",
      "jump": "o",
      "offset": [
        395,
        512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1088": {
      "op": "JUMPDEST"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1091": {
      "op": "PUSH2",
      "value": "0x44D"
    },
    "1094": {
      "op": "CALLER"
    },
    "1095": {
      "op": "DUP5"
    },
    "1096": {
      "op": "DUP5"
    },
    "1097": {
      "op": "PUSH2",
      "value": "0xA66"
    },
    "1100": {
      "jump": "i",
      "op": "JUMP"
    },
    "1101": {
      "op": "JUMPDEST"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "JUMPDEST"
    },
    "1106": {
      "op": "SWAP3"
    },
    "1107": {
      "op": "SWAP2"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "jump": "o",
      "op": "JUMP"
    },
    "1111": {
      "op": "JUMPDEST"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1114": {
      "op": "PUSH2",
      "value": "0x464"
    },
    "1117": {
      "op": "DUP5"
    },
    "1118": {
      "op": "DUP5"
    },
    "1119": {
      "op": "DUP5"
    },
    "1120": {
      "op": "PUSH2",
      "value": "0xB8B"
    },
    "1123": {
      "jump": "i",
      "op": "JUMP"
    },
    "1124": {
      "op": "JUMPDEST"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "op": "SUB"
    },
    "1133": {
      "op": "DUP5"
    },
    "1134": {
      "op": "AND"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1137": {
      "op": "SWAP1"
    },
    "1138": {
      "op": "DUP2"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1144": {
      "op": "SWAP1"
    },
    "1145": {
      "op": "DUP2"
    },
    "1146": {
      "op": "MSTORE"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1149": {
      "op": "DUP1"
    },
    "1150": {
      "op": "DUP4"
    },
    "1151": {
      "op": "KECCAK256"
    },
    "1152": {
      "op": "CALLER"
    },
    "1153": {
      "op": "DUP5"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "op": "SWAP1"
    },
    "1156": {
      "op": "SWAP2"
    },
    "1157": {
      "op": "MSTORE"
    },
    "1158": {
      "op": "SWAP1"
    },
    "1159": {
      "op": "KECCAK256"
    },
    "1160": {
      "op": "SLOAD"
    },
    "1161": {
      "op": "DUP3"
    },
    "1162": {
      "op": "DUP2"
    },
    "1163": {
      "op": "LT"
    },
    "1164": {
      "op": "ISZERO"
    },
    "1165": {
      "op": "PUSH2",
      "value": "0x4EE"
    },
    "1168": {
      "op": "JUMPI"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1171": {
      "op": "MLOAD"
    },
    "1172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "op": "DUP2"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1185": {
      "op": "DUP3"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "op": "MSTORE"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1192": {
      "op": "DUP3"
    },
    "1193": {
      "op": "ADD"
    },
    "1194": {
      "op": "MSTORE"
    },
    "1195": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1247": {
      "op": "DUP3"
    },
    "1248": {
      "op": "ADD"
    },
    "1249": {
      "op": "MSTORE"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "op": "JUMPDEST"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1256": {
      "op": "MLOAD"
    },
    "1257": {
      "op": "DUP1"
    },
    "1258": {
      "op": "SWAP2"
    },
    "1259": {
      "op": "SUB"
    },
    "1260": {
      "op": "SWAP1"
    },
    "1261": {
      "op": "REVERT"
    },
    "1262": {
      "op": "JUMPDEST"
    },
    "1263": {
      "op": "PUSH2",
      "value": "0x502"
    },
    "1266": {
      "op": "DUP6"
    },
    "1267": {
      "op": "CALLER"
    },
    "1268": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "1271": {
      "op": "DUP7"
    },
    "1272": {
      "op": "DUP6"
    },
    "1273": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "1276": {
      "jump": "i",
      "op": "JUMP"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "PUSH2",
      "value": "0xA66"
    },
    "1281": {
      "jump": "i",
      "op": "JUMP"
    },
    "1282": {
      "op": "JUMPDEST"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "SWAP5"
    },
    "1287": {
      "op": "SWAP4"
    },
    "1288": {
      "op": "POP"
    },
    "1289": {
      "op": "POP"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "op": "POP"
    },
    "1292": {
      "jump": "o",
      "op": "JUMP"
    },
    "1293": {
      "op": "JUMPDEST"
    },
    "1294": {
      "op": "CALLER"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1297": {
      "op": "DUP2"
    },
    "1298": {
      "op": "DUP2"
    },
    "1299": {
      "op": "MSTORE"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1304": {
      "op": "SWAP1"
    },
    "1305": {
      "op": "DUP2"
    },
    "1306": {
      "op": "MSTORE"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1309": {
      "op": "DUP1"
    },
    "1310": {
      "op": "DUP4"
    },
    "1311": {
      "op": "KECCAK256"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "op": "SUB"
    },
    "1320": {
      "op": "DUP8"
    },
    "1321": {
      "op": "AND"
    },
    "1322": {
      "op": "DUP5"
    },
    "1323": {
      "op": "MSTORE"
    },
    "1324": {
      "op": "SWAP1"
    },
    "1325": {
      "op": "SWAP2"
    },
    "1326": {
      "op": "MSTORE"
    },
    "1327": {
      "op": "DUP2"
    },
    "1328": {
      "op": "KECCAK256"
    },
    "1329": {
      "op": "SLOAD"
    },
    "1330": {
      "op": "SWAP1"
    },
    "1331": {
      "op": "SWAP2"
    },
    "1332": {
      "op": "PUSH2",
      "value": "0x44D"
    },
    "1335": {
      "op": "SWAP2"
    },
    "1336": {
      "op": "DUP6"
    },
    "1337": {
      "op": "SWAP1"
    },
    "1338": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "1341": {
      "op": "SWAP1"
    },
    "1342": {
      "op": "DUP7"
    },
    "1343": {
      "op": "SWAP1"
    },
    "1344": {
      "op": "PUSH2",
      "value": "0x1146"
    },
    "1347": {
      "jump": "i",
      "op": "JUMP"
    },
    "1348": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1349": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1785,
        1792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1351": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1794,
        1801
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1352": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1826,
        1827
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x0"
    },
    "1354": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1823
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1355": {
      "branch": 17,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1827
      ],
      "op": "GT",
      "path": "4"
    },
    "1356": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1842
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1357": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1842
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1358": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1842
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x557"
    },
    "1361": {
      "branch": 17,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1842
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1362": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1842
      ],
      "op": "POP",
      "path": "4"
    },
    "1363": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1841,
        1842
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1365": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1831,
        1838
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1366": {
      "branch": 18,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1831,
        1842
      ],
      "op": "GT",
      "path": "4"
    },
    "1367": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1842
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1368": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1860
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1369": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1860
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1370": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1860
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x563"
    },
    "1373": {
      "branch": 18,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1860
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1374": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1860
      ],
      "op": "POP",
      "path": "4"
    },
    "1375": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1859,
        1860
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1377": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1846,
        1856
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1378": {
      "branch": 19,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1846,
        1860
      ],
      "op": "GT",
      "path": "4"
    },
    "1379": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1817,
        1860
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1380": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1809,
        1861
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56C"
    },
    "1383": {
      "branch": 19,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1809,
        1861
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1384": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1809,
        1861
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1386": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1809,
        1861
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1387": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1809,
        1861
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1388": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1809,
        1861
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1389": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1867,
        1890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1391": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1893,
        1906
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x577"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1396": {
      "op": "SLOAD"
    },
    "1397": {
      "op": "SWAP1"
    },
    "1398": {
      "op": "JUMP"
    },
    "1399": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1893,
        1906
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1400": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1867,
        1906
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1401": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1867,
        1906
      ],
      "op": "POP",
      "path": "4"
    },
    "1402": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1938,
        1939
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "1404": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1920,
        1935
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1405": {
      "branch": 20,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1920,
        1939
      ],
      "op": "GT",
      "path": "4"
    },
    "1406": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5D5"
    },
    "1409": {
      "branch": 20,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1410": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1412": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1421": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1424": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1426": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1427": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "ADD",
      "path": "4"
    },
    "1428": {
      "op": "MSTORE"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1431": {
      "op": "DUP1"
    },
    "1432": {
      "op": "DUP3"
    },
    "1433": {
      "op": "ADD"
    },
    "1434": {
      "op": "MSTORE"
    },
    "1435": {
      "op": "PUSH32",
      "value": "0x6C6971756964697479206D75737420626520706F73697469766520746F207265"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1470": {
      "op": "DUP3"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "op": "MSTORE"
    },
    "1473": {
      "op": "PUSH4",
      "value": "0x6D6F7665"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1483": {
      "op": "DUP3"
    },
    "1484": {
      "op": "ADD"
    },
    "1485": {
      "op": "MSTORE"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E5"
    },
    "1492": {
      "op": "JUMP"
    },
    "1493": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1912,
        1980
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1494": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1987,
        2008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1496": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2011,
        2024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5DF"
    },
    "1499": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2011,
        2022
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BF"
    },
    "1502": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        2011,
        2024
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1503": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2011,
        2024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1504": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1987,
        2024
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2030,
        2048
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1508": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2084,
        2099
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1509": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2081
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5EE"
    },
    "1512": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2060,
        2081
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "1513": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2057
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1514": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2081
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1180"
    },
    "1517": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        2051,
        2081
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1518": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2081
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1519": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2099
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F8"
    },
    "1522": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2099
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1523": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1524": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2099
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115E"
    },
    "1527": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        2051,
        2099
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1528": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2051,
        2099
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1529": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2030,
        2099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2105,
        2125
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1533": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2153,
        2168
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1534": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x607"
    },
    "1537": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2137,
        2150
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1538": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2134
      ],
      "op": "DUP12",
      "path": "4"
    },
    "1539": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1180"
    },
    "1542": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        2128,
        2150
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1543": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2150
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1544": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2168
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x611"
    },
    "1547": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2168
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1548": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2168
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1549": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2168
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115E"
    },
    "1552": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        2128,
        2168
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1553": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2128,
        2168
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1554": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2105,
        2168
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1555": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2105,
        2168
      ],
      "op": "POP",
      "path": "4"
    },
    "1556": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2196,
        2203
      ],
      "op": "DUP8",
      "path": "4",
      "statement": 3
    },
    "1557": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2192
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1558": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2203
      ],
      "op": "LT",
      "path": "4"
    },
    "1559": {
      "branch": 21,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2203
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1560": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2233
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1561": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2233
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1562": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2233
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x623"
    },
    "1565": {
      "branch": 21,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2233
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1566": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2233
      ],
      "op": "POP",
      "path": "4"
    },
    "1567": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2223,
        2233
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1568": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2207,
        2219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1569": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2207,
        2233
      ],
      "op": "LT",
      "path": "4"
    },
    "1570": {
      "branch": 22,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2207,
        2233
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1571": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2182,
        2233
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1572": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66F"
    },
    "1575": {
      "branch": 22,
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1576": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1578": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1587": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1590": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1592": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1593": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "ADD",
      "path": "4"
    },
    "1594": {
      "op": "MSTORE"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1599": {
      "op": "DUP3"
    },
    "1600": {
      "op": "ADD"
    },
    "1601": {
      "op": "MSTORE"
    },
    "1602": {
      "op": "PUSH32",
      "value": "0x77726F6E67206C69712E2072656D6F76696E6720706172616D73000000000000"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1637": {
      "op": "DUP3"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E5"
    },
    "1646": {
      "op": "JUMP"
    },
    "1647": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2174,
        2264
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1648": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2271,
        2296
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x679"
    },
    "1651": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2277,
        2287
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1652": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2289,
        2295
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1653": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2271,
        2276
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD63"
    },
    "1656": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        2271,
        2296
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1657": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2271,
        2296
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1658": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x40"
    },
    "1660": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1661": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2310,
        2320
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1662": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2310,
        2320
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1663": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1664": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1665": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8FC"
    },
    "1668": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "MUL",
      "path": "4"
    },
    "1669": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1670": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2331,
        2341
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1671": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2331,
        2341
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1672": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1674": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1675": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1676": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1677": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2331,
        2341
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1678": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2310,
        2320
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1679": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1680": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "CALL",
      "path": "4"
    },
    "1681": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1682": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "POP",
      "path": "4"
    },
    "1683": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "POP",
      "path": "4"
    },
    "1684": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "POP",
      "path": "4"
    },
    "1685": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "POP",
      "path": "4"
    },
    "1686": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1687": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1688": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1689": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A6"
    },
    "1692": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1693": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1694": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1696": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1697": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1698": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1699": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1701": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1702": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2302,
        2342
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1703": {
      "op": "POP"
    },
    "1704": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2355,
        2368
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x5"
    },
    "1706": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2355,
        2368
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1707": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1709": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1710": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1719": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1720": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2379,
        2389
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1721": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1723": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1724": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ADD",
      "path": "4"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1728": {
      "op": "DUP2"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "op": "DUP4"
    },
    "1731": {
      "op": "SWAP1"
    },
    "1732": {
      "op": "MSTORE"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "op": "SUB"
    },
    "1741": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2355,
        2368
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1742": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2355,
        2368
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1743": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2355,
        2368
      ],
      "op": "AND",
      "path": "4"
    },
    "1744": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2355,
        2368
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1745": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2378
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1750": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1756": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1758": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1759": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1760": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1761": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "SUB",
      "path": "4"
    },
    "1762": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1763": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1765": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1766": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1767": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1768": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1769": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1770": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1771": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F3"
    },
    "1774": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1775": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1777": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1778": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1779": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1780": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "POP",
      "path": "4"
    },
    "1781": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "GAS",
      "path": "4"
    },
    "1782": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "CALL",
      "path": "4"
    },
    "1783": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1784": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1785": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1786": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x707"
    },
    "1789": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1790": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1791": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1793": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1794": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1795": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1796": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1798": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1799": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1800": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "POP",
      "path": "4"
    },
    "1801": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "POP",
      "path": "4"
    },
    "1802": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "POP",
      "path": "4"
    },
    "1803": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "POP",
      "path": "4"
    },
    "1804": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1806": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1807": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1808": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1810": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "NOT",
      "path": "4"
    },
    "1811": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1813": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1814": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ADD",
      "path": "4"
    },
    "1815": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "AND",
      "path": "4"
    },
    "1816": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1817": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ADD",
      "path": "4"
    },
    "1818": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1819": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1821": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1822": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "POP",
      "path": "4"
    },
    "1823": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1824": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "ADD",
      "path": "4"
    },
    "1825": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1826": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x72B"
    },
    "1829": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1830": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1831": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1068"
    },
    "1834": {
      "fn": "Exchange.removeLiquidity",
      "jump": "i",
      "offset": [
        2348,
        2404
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1835": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2348,
        2404
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2419,
        2429
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 7
    },
    "1838": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2419,
        2429
      ],
      "op": "SWAP9",
      "path": "4"
    },
    "1839": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2419,
        2429
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1840": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        2419,
        2429
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "fn": "Exchange.removeLiquidity",
      "offset": [
        1691,
        2449
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "POP"
    },
    "1847": {
      "op": "POP"
    },
    "1848": {
      "op": "POP"
    },
    "1849": {
      "fn": "Exchange.removeLiquidity",
      "jump": "o",
      "offset": [
        1691,
        2449
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1850": {
      "op": "JUMPDEST"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1855": {
      "op": "DUP1"
    },
    "1856": {
      "op": "SLOAD"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x33C"
    },
    "1860": {
      "op": "SWAP1"
    },
    "1861": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "1864": {
      "jump": "i",
      "op": "JUMP"
    },
    "1865": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        516,
        1687
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1866": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        605,
        612
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1868": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        620,
        643
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1869": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        646,
        659
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x755"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1874": {
      "op": "SLOAD"
    },
    "1875": {
      "op": "SWAP1"
    },
    "1876": {
      "op": "JUMP"
    },
    "1877": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        646,
        659
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1878": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        620,
        659
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        670,
        689
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1881": {
      "branch": 23,
      "fn": "Exchange.addLiquidity",
      "offset": [
        670,
        689
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1882": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        666,
        1683
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8F1"
    },
    "1885": {
      "branch": 23,
      "fn": "Exchange.addLiquidity",
      "offset": [
        666,
        1683
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1886": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        723,
        724
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x0"
    },
    "1888": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        707,
        720
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1889": {
      "branch": 24,
      "fn": "Exchange.addLiquidity",
      "offset": [
        707,
        724
      ],
      "op": "GT",
      "path": "4"
    },
    "1890": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A5"
    },
    "1893": {
      "branch": 24,
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1894": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1896": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1905": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1908": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1910": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1911": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "ADD",
      "path": "4"
    },
    "1912": {
      "op": "MSTORE"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1917": {
      "op": "DUP3"
    },
    "1918": {
      "op": "ADD"
    },
    "1919": {
      "op": "MSTORE"
    },
    "1920": {
      "op": "PUSH21",
      "value": "0x6E6F7420656E6F756768206C697175696469747921"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1947": {
      "op": "DUP3"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "op": "MSTORE"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1952": {
      "op": "ADD"
    },
    "1953": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E5"
    },
    "1956": {
      "op": "JUMP"
    },
    "1957": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        699,
        750
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1958": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        759,
        778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1960": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        781,
        814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B1"
    },
    "1963": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        805,
        814
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1964": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        781,
        802
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "1965": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        781,
        814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x119F"
    },
    "1968": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        781,
        814
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1969": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        781,
        814
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1970": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        759,
        814
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1971": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        759,
        814
      ],
      "op": "POP",
      "path": "4"
    },
    "1972": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        822,
        843
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1974": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        846,
        859
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7BD"
    },
    "1977": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        846,
        857
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BF"
    },
    "1980": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        846,
        859
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1981": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        846,
        859
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1982": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        822,
        859
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        868,
        888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1986": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        919,
        930
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1987": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7CC"
    },
    "1990": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        907,
        916
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1991": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        822,
        859
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1992": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1180"
    },
    "1995": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        891,
        916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1996": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        916
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1997": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D6"
    },
    "2000": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        930
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2001": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        930
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2002": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115E"
    },
    "2005": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        891,
        930
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2006": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        891,
        930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2007": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        868,
        930
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        938,
        962
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2011": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        995,
        1006
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2012": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E5"
    },
    "2015": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        983,
        992
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "2016": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        980
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2017": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1180"
    },
    "2020": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        965,
        992
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2021": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        992
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2022": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        1006
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7EF"
    },
    "2025": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        1006
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2026": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        1006
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2027": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        1006
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115E"
    },
    "2030": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        965,
        1006
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2031": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        965,
        1006
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2032": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        938,
        1006
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2033": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        938,
        1006
      ],
      "op": "POP",
      "path": "4"
    },
    "2034": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1037,
        1049
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 9
    },
    "2035": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1033
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2036": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1049
      ],
      "op": "LT",
      "path": "4"
    },
    "2037": {
      "branch": 25,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1049
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2038": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2039": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1086
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2040": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x801"
    },
    "2043": {
      "branch": 25,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1086
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2044": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1086
      ],
      "op": "POP",
      "path": "4"
    },
    "2045": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1073,
        1086
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2046": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1053,
        1069
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2047": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1053,
        1086
      ],
      "op": "LT",
      "path": "4"
    },
    "2048": {
      "branch": 26,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1053,
        1086
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2049": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1023,
        1086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2050": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x84D"
    },
    "2053": {
      "branch": 26,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2054": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2056": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2065": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2068": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2070": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2071": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "ADD",
      "path": "4"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2077": {
      "op": "DUP3"
    },
    "2078": {
      "op": "ADD"
    },
    "2079": {
      "op": "MSTORE"
    },
    "2080": {
      "op": "PUSH32",
      "value": "0x77726F6E67206C69712E2070726F766964657220706172616D73000000000000"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2115": {
      "op": "DUP3"
    },
    "2116": {
      "op": "ADD"
    },
    "2117": {
      "op": "MSTORE"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2120": {
      "op": "ADD"
    },
    "2121": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E5"
    },
    "2124": {
      "op": "JUMP"
    },
    "2125": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1015,
        1117
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2126": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2128": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2129": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x40"
    },
    "2131": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2132": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2141": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2142": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1188,
        1198
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2143": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2145": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2146": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ADD",
      "path": "4"
    },
    "2147": {
      "op": "MSTORE"
    },
    "2148": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1208,
        1212
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2151": {
      "op": "DUP3"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "MSTORE"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2156": {
      "op": "DUP2"
    },
    "2157": {
      "op": "ADD"
    },
    "2158": {
      "op": "DUP5"
    },
    "2159": {
      "op": "SWAP1"
    },
    "2160": {
      "op": "MSTORE"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2167": {
      "op": "SHL"
    },
    "2168": {
      "op": "SUB"
    },
    "2169": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2170": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2171": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "AND",
      "path": "4"
    },
    "2172": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2173": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2174": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1147,
        1160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2175": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1187
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "2180": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2186": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2188": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2189": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2190": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2191": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "SUB",
      "path": "4"
    },
    "2192": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2193": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2195": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2196": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2197": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2198": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2199": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2200": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2201": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A1"
    },
    "2204": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2205": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2207": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2208": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2209": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2210": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "POP",
      "path": "4"
    },
    "2211": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "GAS",
      "path": "4"
    },
    "2212": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "CALL",
      "path": "4"
    },
    "2213": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2214": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2215": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2216": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B5"
    },
    "2219": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2220": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2221": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2223": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2224": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2225": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2226": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2228": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2229": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2230": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "POP",
      "path": "4"
    },
    "2231": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "POP",
      "path": "4"
    },
    "2232": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "POP",
      "path": "4"
    },
    "2233": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "POP",
      "path": "4"
    },
    "2234": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2236": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2237": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2238": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2240": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "NOT",
      "path": "4"
    },
    "2241": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2243": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2244": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ADD",
      "path": "4"
    },
    "2245": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "AND",
      "path": "4"
    },
    "2246": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2247": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ADD",
      "path": "4"
    },
    "2248": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2249": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2251": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2252": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "POP",
      "path": "4"
    },
    "2253": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2254": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "ADD",
      "path": "4"
    },
    "2255": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2256": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8D9"
    },
    "2259": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2260": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2261": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1068"
    },
    "2264": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        1169,
        1228
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2265": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2266": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1169,
        1228
      ],
      "op": "POP",
      "path": "4"
    },
    "2267": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1237,
        1272
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x8E4"
    },
    "2270": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1243,
        1253
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2271": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1255,
        1271
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2272": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1237,
        1242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB2"
    },
    "2275": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        1237,
        1272
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2276": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1237,
        1272
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1287,
        1303
      ],
      "op": "SWAP5",
      "path": "4",
      "statement": 12
    },
    "2279": {
      "op": "POP"
    },
    "2280": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1280,
        1303
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x451"
    },
    "2283": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1280,
        1303
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "op": "POP"
    },
    "2287": {
      "op": "POP"
    },
    "2288": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1280,
        1303
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2289": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        666,
        1683
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2290": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1350
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x5"
    },
    "2292": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1350
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2299": {
      "op": "SHL"
    },
    "2300": {
      "op": "SUB"
    },
    "2301": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1350
      ],
      "op": "AND",
      "path": "4"
    },
    "2302": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1364
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2303": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1364
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2304": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1364
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2305": {
      "branch": 27,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1364
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2306": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1391
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90F"
    },
    "2309": {
      "branch": 27,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1391
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2310": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1391
      ],
      "op": "POP",
      "path": "4"
    },
    "2311": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1381,
        1391
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3B9ACA00"
    },
    "2316": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1368,
        1377
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "2317": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1368,
        1391
      ],
      "op": "LT",
      "path": "4"
    },
    "2318": {
      "branch": 28,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1368,
        1391
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2319": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1337,
        1391
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2320": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1329,
        1392
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x918"
    },
    "2323": {
      "branch": 28,
      "fn": "Exchange.addLiquidity",
      "offset": [
        1329,
        1392
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2324": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1329,
        1392
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2326": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1329,
        1392
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2327": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1329,
        1392
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2328": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1329,
        1392
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2329": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2331": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2332": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x40"
    },
    "2334": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2335": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2344": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2345": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1561,
        1571
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2346": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2348": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2349": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ADD",
      "path": "4"
    },
    "2350": {
      "op": "MSTORE"
    },
    "2351": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1581,
        1585
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2354": {
      "op": "DUP3"
    },
    "2355": {
      "op": "ADD"
    },
    "2356": {
      "op": "MSTORE"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2359": {
      "op": "DUP2"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "DUP6"
    },
    "2362": {
      "op": "SWAP1"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1423,
        1433
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2365": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1423,
        1433
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2366": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1468,
        1489
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "2367": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1468,
        1489
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "op": "SUB"
    },
    "2376": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2377": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2378": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "AND",
      "path": "4"
    },
    "2379": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2380": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2381": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1520,
        1533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2382": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1560
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "2387": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1560
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2393": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2395": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2396": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2397": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2398": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "SUB",
      "path": "4"
    },
    "2399": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2400": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2402": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2403": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2404": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2405": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2406": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2407": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2408": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x970"
    },
    "2411": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2412": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2414": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2415": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2416": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2417": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "POP",
      "path": "4"
    },
    "2418": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "GAS",
      "path": "4"
    },
    "2419": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "CALL",
      "path": "4"
    },
    "2420": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2421": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2422": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2423": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x984"
    },
    "2426": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2427": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2428": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2430": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2431": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2432": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2433": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2435": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2436": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2437": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "POP",
      "path": "4"
    },
    "2438": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "POP",
      "path": "4"
    },
    "2439": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "POP",
      "path": "4"
    },
    "2440": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "POP",
      "path": "4"
    },
    "2441": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2443": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2444": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2445": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2447": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "NOT",
      "path": "4"
    },
    "2448": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2450": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2451": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ADD",
      "path": "4"
    },
    "2452": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "AND",
      "path": "4"
    },
    "2453": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2454": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ADD",
      "path": "4"
    },
    "2455": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2456": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2458": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2459": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "POP",
      "path": "4"
    },
    "2460": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2461": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "ADD",
      "path": "4"
    },
    "2462": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2463": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A8"
    },
    "2466": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2467": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2468": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1068"
    },
    "2471": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        1542,
        1601
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2472": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2473": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1542,
        1601
      ],
      "op": "POP",
      "path": "4"
    },
    "2474": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1610,
        1645
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x9B3"
    },
    "2477": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1616,
        1626
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2478": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1628,
        1644
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2479": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1610,
        1615
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB2"
    },
    "2482": {
      "fn": "Exchange.addLiquidity",
      "jump": "i",
      "offset": [
        1610,
        1645
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2483": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1610,
        1645
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1660,
        1676
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 16
    },
    "2486": {
      "op": "POP"
    },
    "2487": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1653,
        1676
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x451"
    },
    "2490": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1653,
        1676
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2491": {
      "op": "POP"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "fn": "Exchange.addLiquidity",
      "offset": [
        1653,
        1676
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2494": {
      "op": "JUMPDEST"
    },
    "2495": {
      "op": "CALLER"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2498": {
      "op": "SWAP1"
    },
    "2499": {
      "op": "DUP2"
    },
    "2500": {
      "op": "MSTORE"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2505": {
      "op": "SWAP1"
    },
    "2506": {
      "op": "DUP2"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2510": {
      "op": "DUP1"
    },
    "2511": {
      "op": "DUP4"
    },
    "2512": {
      "op": "KECCAK256"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "op": "SUB"
    },
    "2521": {
      "op": "DUP7"
    },
    "2522": {
      "op": "AND"
    },
    "2523": {
      "op": "DUP5"
    },
    "2524": {
      "op": "MSTORE"
    },
    "2525": {
      "op": "SWAP1"
    },
    "2526": {
      "op": "SWAP2"
    },
    "2527": {
      "op": "MSTORE"
    },
    "2528": {
      "op": "DUP2"
    },
    "2529": {
      "op": "KECCAK256"
    },
    "2530": {
      "op": "SLOAD"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "DUP2"
    },
    "2533": {
      "op": "LT"
    },
    "2534": {
      "op": "ISZERO"
    },
    "2535": {
      "op": "PUSH2",
      "value": "0xA40"
    },
    "2538": {
      "op": "JUMPI"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2541": {
      "op": "MLOAD"
    },
    "2542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "op": "DUP2"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2555": {
      "op": "DUP3"
    },
    "2556": {
      "op": "ADD"
    },
    "2557": {
      "op": "MSTORE"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2562": {
      "op": "DUP3"
    },
    "2563": {
      "op": "ADD"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2600": {
      "op": "DUP3"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "MSTORE"
    },
    "2603": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "2623": {
      "op": "JUMP"
    },
    "2624": {
      "op": "JUMPDEST"
    },
    "2625": {
      "op": "PUSH2",
      "value": "0xA4F"
    },
    "2628": {
      "op": "CALLER"
    },
    "2629": {
      "op": "DUP6"
    },
    "2630": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "2633": {
      "op": "DUP7"
    },
    "2634": {
      "op": "DUP6"
    },
    "2635": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "2638": {
      "jump": "i",
      "op": "JUMP"
    },
    "2639": {
      "op": "JUMPDEST"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "SWAP4"
    },
    "2644": {
      "op": "SWAP3"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "jump": "o",
      "op": "JUMP"
    },
    "2649": {
      "op": "JUMPDEST"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2652": {
      "op": "PUSH2",
      "value": "0x44D"
    },
    "2655": {
      "op": "CALLER"
    },
    "2656": {
      "op": "DUP5"
    },
    "2657": {
      "op": "DUP5"
    },
    "2658": {
      "op": "PUSH2",
      "value": "0xB8B"
    },
    "2661": {
      "jump": "i",
      "op": "JUMP"
    },
    "2662": {
      "op": "JUMPDEST"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "op": "SUB"
    },
    "2671": {
      "op": "DUP4"
    },
    "2672": {
      "op": "AND"
    },
    "2673": {
      "op": "PUSH2",
      "value": "0xAC8"
    },
    "2676": {
      "op": "JUMPI"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2679": {
      "op": "MLOAD"
    },
    "2680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2686": {
      "op": "SHL"
    },
    "2687": {
      "op": "DUP2"
    },
    "2688": {
      "op": "MSTORE"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2693": {
      "op": "DUP3"
    },
    "2694": {
      "op": "ADD"
    },
    "2695": {
      "op": "MSTORE"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2698": {
      "op": "DUP1"
    },
    "2699": {
      "op": "DUP3"
    },
    "2700": {
      "op": "ADD"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2737": {
      "op": "DUP3"
    },
    "2738": {
      "op": "ADD"
    },
    "2739": {
      "op": "MSTORE"
    },
    "2740": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2750": {
      "op": "DUP3"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "2759": {
      "op": "JUMP"
    },
    "2760": {
      "op": "JUMPDEST"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "op": "SUB"
    },
    "2769": {
      "op": "DUP3"
    },
    "2770": {
      "op": "AND"
    },
    "2771": {
      "op": "PUSH2",
      "value": "0xB29"
    },
    "2774": {
      "op": "JUMPI"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2777": {
      "op": "MLOAD"
    },
    "2778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "DUP2"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2798": {
      "op": "DUP3"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "op": "MSTORE"
    },
    "2801": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2836": {
      "op": "DUP3"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "op": "MSTORE"
    },
    "2839": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "ADD"
    },
    "2849": {
      "op": "MSTORE"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2852": {
      "op": "ADD"
    },
    "2853": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "2856": {
      "op": "JUMP"
    },
    "2857": {
      "op": "JUMPDEST"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2864": {
      "op": "SHL"
    },
    "2865": {
      "op": "SUB"
    },
    "2866": {
      "op": "DUP4"
    },
    "2867": {
      "op": "DUP2"
    },
    "2868": {
      "op": "AND"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2871": {
      "op": "DUP2"
    },
    "2872": {
      "op": "DUP2"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2878": {
      "op": "SWAP1"
    },
    "2879": {
      "op": "DUP2"
    },
    "2880": {
      "op": "MSTORE"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2883": {
      "op": "DUP1"
    },
    "2884": {
      "op": "DUP4"
    },
    "2885": {
      "op": "KECCAK256"
    },
    "2886": {
      "op": "SWAP5"
    },
    "2887": {
      "op": "DUP8"
    },
    "2888": {
      "op": "AND"
    },
    "2889": {
      "op": "DUP1"
    },
    "2890": {
      "op": "DUP5"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "SWAP5"
    },
    "2893": {
      "op": "DUP3"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "op": "SWAP2"
    },
    "2896": {
      "op": "DUP3"
    },
    "2897": {
      "op": "SWAP1"
    },
    "2898": {
      "op": "KECCAK256"
    },
    "2899": {
      "op": "DUP6"
    },
    "2900": {
      "op": "SWAP1"
    },
    "2901": {
      "op": "SSTORE"
    },
    "2902": {
      "op": "SWAP1"
    },
    "2903": {
      "op": "MLOAD"
    },
    "2904": {
      "op": "DUP5"
    },
    "2905": {
      "op": "DUP2"
    },
    "2906": {
      "op": "MSTORE"
    },
    "2907": {
      "op": "PUSH32",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2940": {
      "op": "SWAP2"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "op": "JUMPDEST"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2945": {
      "op": "MLOAD"
    },
    "2946": {
      "op": "DUP1"
    },
    "2947": {
      "op": "SWAP2"
    },
    "2948": {
      "op": "SUB"
    },
    "2949": {
      "op": "SWAP1"
    },
    "2950": {
      "op": "LOG3"
    },
    "2951": {
      "op": "POP"
    },
    "2952": {
      "op": "POP"
    },
    "2953": {
      "op": "POP"
    },
    "2954": {
      "jump": "o",
      "op": "JUMP"
    },
    "2955": {
      "op": "JUMPDEST"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2962": {
      "op": "SHL"
    },
    "2963": {
      "op": "SUB"
    },
    "2964": {
      "op": "DUP4"
    },
    "2965": {
      "op": "AND"
    },
    "2966": {
      "op": "PUSH2",
      "value": "0xBEF"
    },
    "2969": {
      "op": "JUMPI"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2972": {
      "op": "MLOAD"
    },
    "2973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "DUP2"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2986": {
      "op": "DUP3"
    },
    "2987": {
      "op": "ADD"
    },
    "2988": {
      "op": "MSTORE"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2993": {
      "op": "DUP3"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "op": "MSTORE"
    },
    "2996": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3031": {
      "op": "DUP3"
    },
    "3032": {
      "op": "ADD"
    },
    "3033": {
      "op": "MSTORE"
    },
    "3034": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3045": {
      "op": "DUP3"
    },
    "3046": {
      "op": "ADD"
    },
    "3047": {
      "op": "MSTORE"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3050": {
      "op": "ADD"
    },
    "3051": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "3054": {
      "op": "JUMP"
    },
    "3055": {
      "op": "JUMPDEST"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3062": {
      "op": "SHL"
    },
    "3063": {
      "op": "SUB"
    },
    "3064": {
      "op": "DUP3"
    },
    "3065": {
      "op": "AND"
    },
    "3066": {
      "op": "PUSH2",
      "value": "0xC51"
    },
    "3069": {
      "op": "JUMPI"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3072": {
      "op": "MLOAD"
    },
    "3073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3079": {
      "op": "SHL"
    },
    "3080": {
      "op": "DUP2"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3093": {
      "op": "DUP3"
    },
    "3094": {
      "op": "ADD"
    },
    "3095": {
      "op": "MSTORE"
    },
    "3096": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3131": {
      "op": "DUP3"
    },
    "3132": {
      "op": "ADD"
    },
    "3133": {
      "op": "MSTORE"
    },
    "3134": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3143": {
      "op": "DUP3"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3148": {
      "op": "ADD"
    },
    "3149": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "3152": {
      "op": "JUMP"
    },
    "3153": {
      "op": "JUMPDEST"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3160": {
      "op": "SHL"
    },
    "3161": {
      "op": "SUB"
    },
    "3162": {
      "op": "DUP4"
    },
    "3163": {
      "op": "AND"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3166": {
      "op": "SWAP1"
    },
    "3167": {
      "op": "DUP2"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3171": {
      "op": "DUP2"
    },
    "3172": {
      "op": "SWAP1"
    },
    "3173": {
      "op": "MSTORE"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3176": {
      "op": "SWAP1"
    },
    "3177": {
      "op": "KECCAK256"
    },
    "3178": {
      "op": "SLOAD"
    },
    "3179": {
      "op": "DUP2"
    },
    "3180": {
      "op": "DUP2"
    },
    "3181": {
      "op": "LT"
    },
    "3182": {
      "op": "ISZERO"
    },
    "3183": {
      "op": "PUSH2",
      "value": "0xCC9"
    },
    "3186": {
      "op": "JUMPI"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3189": {
      "op": "MLOAD"
    },
    "3190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3196": {
      "op": "SHL"
    },
    "3197": {
      "op": "DUP2"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "ADD"
    },
    "3205": {
      "op": "MSTORE"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3210": {
      "op": "DUP3"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "op": "MSTORE"
    },
    "3213": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3248": {
      "op": "DUP3"
    },
    "3249": {
      "op": "ADD"
    },
    "3250": {
      "op": "MSTORE"
    },
    "3251": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3263": {
      "op": "DUP3"
    },
    "3264": {
      "op": "ADD"
    },
    "3265": {
      "op": "MSTORE"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3268": {
      "op": "ADD"
    },
    "3269": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "3272": {
      "op": "JUMP"
    },
    "3273": {
      "op": "JUMPDEST"
    },
    "3274": {
      "op": "PUSH2",
      "value": "0xCD3"
    },
    "3277": {
      "op": "DUP3"
    },
    "3278": {
      "op": "DUP3"
    },
    "3279": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "3282": {
      "jump": "i",
      "op": "JUMP"
    },
    "3283": {
      "op": "JUMPDEST"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3290": {
      "op": "SHL"
    },
    "3291": {
      "op": "SUB"
    },
    "3292": {
      "op": "DUP1"
    },
    "3293": {
      "op": "DUP7"
    },
    "3294": {
      "op": "AND"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3297": {
      "op": "SWAP1"
    },
    "3298": {
      "op": "DUP2"
    },
    "3299": {
      "op": "MSTORE"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3302": {
      "op": "DUP2"
    },
    "3303": {
      "op": "SWAP1"
    },
    "3304": {
      "op": "MSTORE"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3307": {
      "op": "DUP1"
    },
    "3308": {
      "op": "DUP3"
    },
    "3309": {
      "op": "KECCAK256"
    },
    "3310": {
      "op": "SWAP4"
    },
    "3311": {
      "op": "SWAP1"
    },
    "3312": {
      "op": "SWAP4"
    },
    "3313": {
      "op": "SSTORE"
    },
    "3314": {
      "op": "SWAP1"
    },
    "3315": {
      "op": "DUP6"
    },
    "3316": {
      "op": "AND"
    },
    "3317": {
      "op": "DUP2"
    },
    "3318": {
      "op": "MSTORE"
    },
    "3319": {
      "op": "SWAP1"
    },
    "3320": {
      "op": "DUP2"
    },
    "3321": {
      "op": "KECCAK256"
    },
    "3322": {
      "op": "DUP1"
    },
    "3323": {
      "op": "SLOAD"
    },
    "3324": {
      "op": "DUP5"
    },
    "3325": {
      "op": "SWAP3"
    },
    "3326": {
      "op": "SWAP1"
    },
    "3327": {
      "op": "PUSH2",
      "value": "0xD09"
    },
    "3330": {
      "op": "SWAP1"
    },
    "3331": {
      "op": "DUP5"
    },
    "3332": {
      "op": "SWAP1"
    },
    "3333": {
      "op": "PUSH2",
      "value": "0x1146"
    },
    "3336": {
      "jump": "i",
      "op": "JUMP"
    },
    "3337": {
      "op": "JUMPDEST"
    },
    "3338": {
      "op": "SWAP3"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "op": "POP"
    },
    "3341": {
      "op": "DUP2"
    },
    "3342": {
      "op": "SWAP1"
    },
    "3343": {
      "op": "SSTORE"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "op": "DUP3"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3352": {
      "op": "SHL"
    },
    "3353": {
      "op": "SUB"
    },
    "3354": {
      "op": "AND"
    },
    "3355": {
      "op": "DUP5"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3362": {
      "op": "SHL"
    },
    "3363": {
      "op": "SUB"
    },
    "3364": {
      "op": "AND"
    },
    "3365": {
      "op": "PUSH32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3398": {
      "op": "DUP5"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3401": {
      "op": "MLOAD"
    },
    "3402": {
      "op": "PUSH2",
      "value": "0xD55"
    },
    "3405": {
      "op": "SWAP2"
    },
    "3406": {
      "op": "DUP2"
    },
    "3407": {
      "op": "MSTORE"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3410": {
      "op": "ADD"
    },
    "3411": {
      "op": "SWAP1"
    },
    "3412": {
      "op": "JUMP"
    },
    "3413": {
      "op": "JUMPDEST"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3416": {
      "op": "MLOAD"
    },
    "3417": {
      "op": "DUP1"
    },
    "3418": {
      "op": "SWAP2"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "op": "SWAP1"
    },
    "3421": {
      "op": "LOG3"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "op": "POP"
    },
    "3425": {
      "op": "POP"
    },
    "3426": {
      "jump": "o",
      "op": "JUMP"
    },
    "3427": {
      "op": "JUMPDEST"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3434": {
      "op": "SHL"
    },
    "3435": {
      "op": "SUB"
    },
    "3436": {
      "op": "DUP3"
    },
    "3437": {
      "op": "AND"
    },
    "3438": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "3441": {
      "op": "JUMPI"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3444": {
      "op": "MLOAD"
    },
    "3445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "op": "DUP2"
    },
    "3453": {
      "op": "MSTORE"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3458": {
      "op": "DUP3"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "MSTORE"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3465": {
      "op": "DUP3"
    },
    "3466": {
      "op": "ADD"
    },
    "3467": {
      "op": "MSTORE"
    },
    "3468": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3503": {
      "op": "DUP3"
    },
    "3504": {
      "op": "ADD"
    },
    "3505": {
      "op": "MSTORE"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3510": {
      "op": "SHL"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3513": {
      "op": "DUP3"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "op": "MSTORE"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "3522": {
      "op": "JUMP"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "op": "SUB"
    },
    "3532": {
      "op": "DUP3"
    },
    "3533": {
      "op": "AND"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3536": {
      "op": "SWAP1"
    },
    "3537": {
      "op": "DUP2"
    },
    "3538": {
      "op": "MSTORE"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3541": {
      "op": "DUP2"
    },
    "3542": {
      "op": "SWAP1"
    },
    "3543": {
      "op": "MSTORE"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3546": {
      "op": "SWAP1"
    },
    "3547": {
      "op": "KECCAK256"
    },
    "3548": {
      "op": "SLOAD"
    },
    "3549": {
      "op": "DUP2"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "LT"
    },
    "3552": {
      "op": "ISZERO"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xE37"
    },
    "3556": {
      "op": "JUMPI"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3559": {
      "op": "MLOAD"
    },
    "3560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3566": {
      "op": "SHL"
    },
    "3567": {
      "op": "DUP2"
    },
    "3568": {
      "op": "MSTORE"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3573": {
      "op": "DUP3"
    },
    "3574": {
      "op": "ADD"
    },
    "3575": {
      "op": "MSTORE"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3580": {
      "op": "DUP3"
    },
    "3581": {
      "op": "ADD"
    },
    "3582": {
      "op": "MSTORE"
    },
    "3583": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3618": {
      "op": "DUP3"
    },
    "3619": {
      "op": "ADD"
    },
    "3620": {
      "op": "MSTORE"
    },
    "3621": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3626": {
      "op": "SHL"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3629": {
      "op": "DUP3"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "MSTORE"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3634": {
      "op": "ADD"
    },
    "3635": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "3638": {
      "op": "JUMP"
    },
    "3639": {
      "op": "JUMPDEST"
    },
    "3640": {
      "op": "PUSH2",
      "value": "0xE41"
    },
    "3643": {
      "op": "DUP3"
    },
    "3644": {
      "op": "DUP3"
    },
    "3645": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "3648": {
      "jump": "i",
      "op": "JUMP"
    },
    "3649": {
      "op": "JUMPDEST"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3656": {
      "op": "SHL"
    },
    "3657": {
      "op": "SUB"
    },
    "3658": {
      "op": "DUP5"
    },
    "3659": {
      "op": "AND"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3662": {
      "op": "SWAP1"
    },
    "3663": {
      "op": "DUP2"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3667": {
      "op": "DUP2"
    },
    "3668": {
      "op": "SWAP1"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3672": {
      "op": "DUP2"
    },
    "3673": {
      "op": "KECCAK256"
    },
    "3674": {
      "op": "SWAP2"
    },
    "3675": {
      "op": "SWAP1"
    },
    "3676": {
      "op": "SWAP2"
    },
    "3677": {
      "op": "SSTORE"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3680": {
      "op": "DUP1"
    },
    "3681": {
      "op": "SLOAD"
    },
    "3682": {
      "op": "DUP5"
    },
    "3683": {
      "op": "SWAP3"
    },
    "3684": {
      "op": "SWAP1"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xE6F"
    },
    "3688": {
      "op": "SWAP1"
    },
    "3689": {
      "op": "DUP5"
    },
    "3690": {
      "op": "SWAP1"
    },
    "3691": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "3694": {
      "jump": "i",
      "op": "JUMP"
    },
    "3695": {
      "op": "JUMPDEST"
    },
    "3696": {
      "op": "SWAP1"
    },
    "3697": {
      "op": "SWAP2"
    },
    "3698": {
      "op": "SSTORE"
    },
    "3699": {
      "op": "POP"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3703": {
      "op": "MLOAD"
    },
    "3704": {
      "op": "DUP3"
    },
    "3705": {
      "op": "DUP2"
    },
    "3706": {
      "op": "MSTORE"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3709": {
      "op": "SWAP1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3716": {
      "op": "SHL"
    },
    "3717": {
      "op": "SUB"
    },
    "3718": {
      "op": "DUP6"
    },
    "3719": {
      "op": "AND"
    },
    "3720": {
      "op": "SWAP1"
    },
    "3721": {
      "op": "PUSH32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3754": {
      "op": "SWAP1"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "op": "PUSH2",
      "value": "0xB7E"
    },
    "3761": {
      "op": "JUMP"
    },
    "3762": {
      "op": "JUMPDEST"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3769": {
      "op": "SHL"
    },
    "3770": {
      "op": "SUB"
    },
    "3771": {
      "op": "DUP3"
    },
    "3772": {
      "op": "AND"
    },
    "3773": {
      "op": "PUSH2",
      "value": "0xF08"
    },
    "3776": {
      "op": "JUMPI"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3779": {
      "op": "MLOAD"
    },
    "3780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3786": {
      "op": "SHL"
    },
    "3787": {
      "op": "DUP2"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3793": {
      "op": "DUP3"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "op": "MSTORE"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3800": {
      "op": "DUP3"
    },
    "3801": {
      "op": "ADD"
    },
    "3802": {
      "op": "MSTORE"
    },
    "3803": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3838": {
      "op": "DUP3"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "MSTORE"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "3847": {
      "op": "JUMP"
    },
    "3848": {
      "op": "JUMPDEST"
    },
    "3849": {
      "op": "DUP1"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "DUP3"
    },
    "3856": {
      "op": "SLOAD"
    },
    "3857": {
      "op": "PUSH2",
      "value": "0xF1A"
    },
    "3860": {
      "op": "SWAP2"
    },
    "3861": {
      "op": "SWAP1"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0x1146"
    },
    "3865": {
      "jump": "i",
      "op": "JUMP"
    },
    "3866": {
      "op": "JUMPDEST"
    },
    "3867": {
      "op": "SWAP1"
    },
    "3868": {
      "op": "SWAP2"
    },
    "3869": {
      "op": "SSTORE"
    },
    "3870": {
      "op": "POP"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3878": {
      "op": "SHL"
    },
    "3879": {
      "op": "SUB"
    },
    "3880": {
      "op": "DUP3"
    },
    "3881": {
      "op": "AND"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3884": {
      "op": "SWAP1"
    },
    "3885": {
      "op": "DUP2"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3889": {
      "op": "DUP2"
    },
    "3890": {
      "op": "SWAP1"
    },
    "3891": {
      "op": "MSTORE"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3894": {
      "op": "DUP2"
    },
    "3895": {
      "op": "KECCAK256"
    },
    "3896": {
      "op": "DUP1"
    },
    "3897": {
      "op": "SLOAD"
    },
    "3898": {
      "op": "DUP4"
    },
    "3899": {
      "op": "SWAP3"
    },
    "3900": {
      "op": "SWAP1"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF47"
    },
    "3904": {
      "op": "SWAP1"
    },
    "3905": {
      "op": "DUP5"
    },
    "3906": {
      "op": "SWAP1"
    },
    "3907": {
      "op": "PUSH2",
      "value": "0x1146"
    },
    "3910": {
      "jump": "i",
      "op": "JUMP"
    },
    "3911": {
      "op": "JUMPDEST"
    },
    "3912": {
      "op": "SWAP1"
    },
    "3913": {
      "op": "SWAP2"
    },
    "3914": {
      "op": "SSTORE"
    },
    "3915": {
      "op": "POP"
    },
    "3916": {
      "op": "POP"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3919": {
      "op": "MLOAD"
    },
    "3920": {
      "op": "DUP2"
    },
    "3921": {
      "op": "DUP2"
    },
    "3922": {
      "op": "MSTORE"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3929": {
      "op": "SHL"
    },
    "3930": {
      "op": "SUB"
    },
    "3931": {
      "op": "DUP4"
    },
    "3932": {
      "op": "AND"
    },
    "3933": {
      "op": "SWAP1"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3936": {
      "op": "SWAP1"
    },
    "3937": {
      "op": "PUSH32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3970": {
      "op": "SWAP1"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3976": {
      "op": "MLOAD"
    },
    "3977": {
      "op": "DUP1"
    },
    "3978": {
      "op": "SWAP2"
    },
    "3979": {
      "op": "SUB"
    },
    "3980": {
      "op": "SWAP1"
    },
    "3981": {
      "op": "LOG3"
    },
    "3982": {
      "op": "POP"
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "jump": "o",
      "op": "JUMP"
    },
    "3985": {
      "op": "JUMPDEST"
    },
    "3986": {
      "op": "DUP1"
    },
    "3987": {
      "op": "CALLDATALOAD"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3994": {
      "op": "SHL"
    },
    "3995": {
      "op": "SUB"
    },
    "3996": {
      "op": "DUP2"
    },
    "3997": {
      "op": "AND"
    },
    "3998": {
      "op": "DUP2"
    },
    "3999": {
      "op": "EQ"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFA8"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "DUP1"
    },
    "4007": {
      "op": "REVERT"
    },
    "4008": {
      "op": "JUMPDEST"
    },
    "4009": {
      "op": "SWAP2"
    },
    "4010": {
      "op": "SWAP1"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "jump": "o",
      "op": "JUMP"
    },
    "4013": {
      "op": "JUMPDEST"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4018": {
      "op": "DUP3"
    },
    "4019": {
      "op": "DUP5"
    },
    "4020": {
      "op": "SUB"
    },
    "4021": {
      "op": "SLT"
    },
    "4022": {
      "op": "ISZERO"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0xFBF"
    },
    "4026": {
      "op": "JUMPI"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4029": {
      "op": "DUP1"
    },
    "4030": {
      "op": "REVERT"
    },
    "4031": {
      "op": "JUMPDEST"
    },
    "4032": {
      "op": "PUSH2",
      "value": "0xFC8"
    },
    "4035": {
      "op": "DUP3"
    },
    "4036": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4039": {
      "jump": "i",
      "op": "JUMP"
    },
    "4040": {
      "op": "JUMPDEST"
    },
    "4041": {
      "op": "SWAP4"
    },
    "4042": {
      "op": "SWAP3"
    },
    "4043": {
      "op": "POP"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "op": "POP"
    },
    "4046": {
      "jump": "o",
      "op": "JUMP"
    },
    "4047": {
      "op": "JUMPDEST"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "DUP1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4053": {
      "op": "DUP4"
    },
    "4054": {
      "op": "DUP6"
    },
    "4055": {
      "op": "SUB"
    },
    "4056": {
      "op": "SLT"
    },
    "4057": {
      "op": "ISZERO"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0xFE2"
    },
    "4061": {
      "op": "JUMPI"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4064": {
      "op": "DUP1"
    },
    "4065": {
      "op": "REVERT"
    },
    "4066": {
      "op": "JUMPDEST"
    },
    "4067": {
      "op": "PUSH2",
      "value": "0xFEB"
    },
    "4070": {
      "op": "DUP4"
    },
    "4071": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4074": {
      "jump": "i",
      "op": "JUMP"
    },
    "4075": {
      "op": "JUMPDEST"
    },
    "4076": {
      "op": "SWAP2"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4083": {
      "op": "DUP5"
    },
    "4084": {
      "op": "ADD"
    },
    "4085": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4088": {
      "jump": "i",
      "op": "JUMP"
    },
    "4089": {
      "op": "JUMPDEST"
    },
    "4090": {
      "op": "SWAP1"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "op": "SWAP3"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "op": "SWAP3"
    },
    "4095": {
      "op": "SWAP1"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "jump": "o",
      "op": "JUMP"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4101": {
      "op": "DUP1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4106": {
      "op": "DUP5"
    },
    "4107": {
      "op": "DUP7"
    },
    "4108": {
      "op": "SUB"
    },
    "4109": {
      "op": "SLT"
    },
    "4110": {
      "op": "ISZERO"
    },
    "4111": {
      "op": "PUSH2",
      "value": "0x1017"
    },
    "4114": {
      "op": "JUMPI"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4117": {
      "op": "DUP1"
    },
    "4118": {
      "op": "REVERT"
    },
    "4119": {
      "op": "JUMPDEST"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4123": {
      "op": "DUP5"
    },
    "4124": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4127": {
      "jump": "i",
      "op": "JUMP"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "SWAP3"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "op": "PUSH2",
      "value": "0x102E"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4136": {
      "op": "DUP6"
    },
    "4137": {
      "op": "ADD"
    },
    "4138": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4141": {
      "jump": "i",
      "op": "JUMP"
    },
    "4142": {
      "op": "JUMPDEST"
    },
    "4143": {
      "op": "SWAP2"
    },
    "4144": {
      "op": "POP"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4147": {
      "op": "DUP5"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "CALLDATALOAD"
    },
    "4150": {
      "op": "SWAP1"
    },
    "4151": {
      "op": "POP"
    },
    "4152": {
      "op": "SWAP3"
    },
    "4153": {
      "op": "POP"
    },
    "4154": {
      "op": "SWAP3"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "op": "SWAP3"
    },
    "4157": {
      "jump": "o",
      "op": "JUMP"
    },
    "4158": {
      "op": "JUMPDEST"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4161": {
      "op": "DUP1"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4164": {
      "op": "DUP4"
    },
    "4165": {
      "op": "DUP6"
    },
    "4166": {
      "op": "SUB"
    },
    "4167": {
      "op": "SLT"
    },
    "4168": {
      "op": "ISZERO"
    },
    "4169": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4172": {
      "op": "JUMPI"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4175": {
      "op": "DUP1"
    },
    "4176": {
      "op": "REVERT"
    },
    "4177": {
      "op": "JUMPDEST"
    },
    "4178": {
      "op": "PUSH2",
      "value": "0x105A"
    },
    "4181": {
      "op": "DUP4"
    },
    "4182": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4185": {
      "jump": "i",
      "op": "JUMP"
    },
    "4186": {
      "op": "JUMPDEST"
    },
    "4187": {
      "op": "SWAP5"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4190": {
      "op": "SWAP4"
    },
    "4191": {
      "op": "SWAP1"
    },
    "4192": {
      "op": "SWAP4"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "CALLDATALOAD"
    },
    "4195": {
      "op": "SWAP4"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "jump": "o",
      "op": "JUMP"
    },
    "4200": {
      "op": "JUMPDEST"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4205": {
      "op": "DUP3"
    },
    "4206": {
      "op": "DUP5"
    },
    "4207": {
      "op": "SUB"
    },
    "4208": {
      "op": "SLT"
    },
    "4209": {
      "op": "ISZERO"
    },
    "4210": {
      "op": "PUSH2",
      "value": "0x107A"
    },
    "4213": {
      "op": "JUMPI"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4216": {
      "op": "DUP1"
    },
    "4217": {
      "op": "REVERT"
    },
    "4218": {
      "op": "JUMPDEST"
    },
    "4219": {
      "op": "DUP2"
    },
    "4220": {
      "op": "MLOAD"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "ISZERO"
    },
    "4223": {
      "op": "ISZERO"
    },
    "4224": {
      "op": "DUP2"
    },
    "4225": {
      "op": "EQ"
    },
    "4226": {
      "op": "PUSH2",
      "value": "0xFC8"
    },
    "4229": {
      "op": "JUMPI"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4232": {
      "op": "DUP1"
    },
    "4233": {
      "op": "REVERT"
    },
    "4234": {
      "op": "JUMPDEST"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4239": {
      "op": "DUP3"
    },
    "4240": {
      "op": "DUP5"
    },
    "4241": {
      "op": "SUB"
    },
    "4242": {
      "op": "SLT"
    },
    "4243": {
      "op": "ISZERO"
    },
    "4244": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4247": {
      "op": "JUMPI"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4250": {
      "op": "DUP1"
    },
    "4251": {
      "op": "REVERT"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "op": "MLOAD"
    },
    "4255": {
      "op": "SWAP2"
    },
    "4256": {
      "op": "SWAP1"
    },
    "4257": {
      "op": "POP"
    },
    "4258": {
      "jump": "o",
      "op": "JUMP"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4262": {
      "op": "DUP1"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4265": {
      "op": "DUP4"
    },
    "4266": {
      "op": "DUP6"
    },
    "4267": {
      "op": "SUB"
    },
    "4268": {
      "op": "SLT"
    },
    "4269": {
      "op": "ISZERO"
    },
    "4270": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4273": {
      "op": "JUMPI"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4276": {
      "op": "DUP1"
    },
    "4277": {
      "op": "REVERT"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "op": "DUP1"
    },
    "4282": {
      "op": "CALLDATALOAD"
    },
    "4283": {
      "op": "SWAP3"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4286": {
      "op": "SWAP1"
    },
    "4287": {
      "op": "SWAP2"
    },
    "4288": {
      "op": "ADD"
    },
    "4289": {
      "op": "CALLDATALOAD"
    },
    "4290": {
      "op": "SWAP2"
    },
    "4291": {
      "op": "POP"
    },
    "4292": {
      "jump": "o",
      "op": "JUMP"
    },
    "4293": {
      "op": "JUMPDEST"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4296": {
      "op": "DUP1"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4301": {
      "op": "DUP5"
    },
    "4302": {
      "op": "DUP7"
    },
    "4303": {
      "op": "SUB"
    },
    "4304": {
      "op": "SLT"
    },
    "4305": {
      "op": "ISZERO"
    },
    "4306": {
      "op": "PUSH2",
      "value": "0x10DA"
    },
    "4309": {
      "op": "JUMPI"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4312": {
      "op": "DUP1"
    },
    "4313": {
      "op": "REVERT"
    },
    "4314": {
      "op": "JUMPDEST"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "op": "DUP2"
    },
    "4318": {
      "op": "CALLDATALOAD"
    },
    "4319": {
      "op": "SWAP4"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4322": {
      "op": "DUP4"
    },
    "4323": {
      "op": "ADD"
    },
    "4324": {
      "op": "CALLDATALOAD"
    },
    "4325": {
      "op": "SWAP4"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4329": {
      "op": "SWAP1"
    },
    "4330": {
      "op": "SWAP3"
    },
    "4331": {
      "op": "ADD"
    },
    "4332": {
      "op": "CALLDATALOAD"
    },
    "4333": {
      "op": "SWAP2"
    },
    "4334": {
      "op": "SWAP1"
    },
    "4335": {
      "op": "POP"
    },
    "4336": {
      "jump": "o",
      "op": "JUMP"
    },
    "4337": {
      "op": "JUMPDEST"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4342": {
      "op": "DUP1"
    },
    "4343": {
      "op": "DUP4"
    },
    "4344": {
      "op": "MSTORE"
    },
    "4345": {
      "op": "DUP4"
    },
    "4346": {
      "op": "MLOAD"
    },
    "4347": {
      "op": "DUP1"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "DUP6"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "DUP2"
    },
    "4356": {
      "op": "DUP2"
    },
    "4357": {
      "op": "LT"
    },
    "4358": {
      "op": "ISZERO"
    },
    "4359": {
      "op": "PUSH2",
      "value": "0x111E"
    },
    "4362": {
      "op": "JUMPI"
    },
    "4363": {
      "op": "DUP6"
    },
    "4364": {
      "op": "DUP2"
    },
    "4365": {
      "op": "ADD"
    },
    "4366": {
      "op": "DUP4"
    },
    "4367": {
      "op": "ADD"
    },
    "4368": {
      "op": "MLOAD"
    },
    "4369": {
      "op": "DUP6"
    },
    "4370": {
      "op": "DUP3"
    },
    "4371": {
      "op": "ADD"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4374": {
      "op": "ADD"
    },
    "4375": {
      "op": "MSTORE"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4381": {
      "op": "JUMP"
    },
    "4382": {
      "op": "JUMPDEST"
    },
    "4383": {
      "op": "DUP2"
    },
    "4384": {
      "op": "DUP2"
    },
    "4385": {
      "op": "GT"
    },
    "4386": {
      "op": "ISZERO"
    },
    "4387": {
      "op": "PUSH2",
      "value": "0x1130"
    },
    "4390": {
      "op": "JUMPI"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4395": {
      "op": "DUP4"
    },
    "4396": {
      "op": "DUP8"
    },
    "4397": {
      "op": "ADD"
    },
    "4398": {
      "op": "ADD"
    },
    "4399": {
      "op": "MSTORE"
    },
    "4400": {
      "op": "JUMPDEST"
    },
    "4401": {
      "op": "POP"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4407": {
      "op": "NOT"
    },
    "4408": {
      "op": "AND"
    },
    "4409": {
      "op": "SWAP3"
    },
    "4410": {
      "op": "SWAP1"
    },
    "4411": {
      "op": "SWAP3"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4415": {
      "op": "ADD"
    },
    "4416": {
      "op": "SWAP4"
    },
    "4417": {
      "op": "SWAP3"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "jump": "o",
      "op": "JUMP"
    },
    "4422": {
      "op": "JUMPDEST"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "NOT"
    },
    "4427": {
      "op": "DUP3"
    },
    "4428": {
      "op": "GT"
    },
    "4429": {
      "op": "ISZERO"
    },
    "4430": {
      "op": "PUSH2",
      "value": "0x1159"
    },
    "4433": {
      "op": "JUMPI"
    },
    "4434": {
      "op": "PUSH2",
      "value": "0x1159"
    },
    "4437": {
      "op": "PUSH2",
      "value": "0x11F1"
    },
    "4440": {
      "jump": "i",
      "op": "JUMP"
    },
    "4441": {
      "op": "JUMPDEST"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "SWAP1"
    },
    "4445": {
      "jump": "o",
      "op": "JUMP"
    },
    "4446": {
      "op": "JUMPDEST"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4449": {
      "op": "DUP3"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0x117B"
    },
    "4453": {
      "op": "JUMPI"
    },
    "4454": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4461": {
      "op": "SHL"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4469": {
      "op": "MSTORE"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4474": {
      "op": "REVERT"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "op": "POP"
    },
    "4477": {
      "op": "DIV"
    },
    "4478": {
      "op": "SWAP1"
    },
    "4479": {
      "jump": "o",
      "op": "JUMP"
    },
    "4480": {
      "op": "JUMPDEST"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "DUP2"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "NOT"
    },
    "4487": {
      "op": "DIV"
    },
    "4488": {
      "op": "DUP4"
    },
    "4489": {
      "op": "GT"
    },
    "4490": {
      "op": "DUP3"
    },
    "4491": {
      "op": "ISZERO"
    },
    "4492": {
      "op": "ISZERO"
    },
    "4493": {
      "op": "AND"
    },
    "4494": {
      "op": "ISZERO"
    },
    "4495": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4498": {
      "op": "JUMPI"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x11F1"
    },
    "4505": {
      "jump": "i",
      "op": "JUMP"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "MUL"
    },
    "4509": {
      "op": "SWAP1"
    },
    "4510": {
      "jump": "o",
      "op": "JUMP"
    },
    "4511": {
      "op": "JUMPDEST"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4514": {
      "op": "DUP3"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "LT"
    },
    "4517": {
      "op": "ISZERO"
    },
    "4518": {
      "op": "PUSH2",
      "value": "0x11B1"
    },
    "4521": {
      "op": "JUMPI"
    },
    "4522": {
      "op": "PUSH2",
      "value": "0x11B1"
    },
    "4525": {
      "op": "PUSH2",
      "value": "0x11F1"
    },
    "4528": {
      "jump": "i",
      "op": "JUMP"
    },
    "4529": {
      "op": "JUMPDEST"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "op": "SUB"
    },
    "4532": {
      "op": "SWAP1"
    },
    "4533": {
      "jump": "o",
      "op": "JUMP"
    },
    "4534": {
      "op": "JUMPDEST"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "DUP2"
    },
    "4538": {
      "op": "DUP2"
    },
    "4539": {
      "op": "SHR"
    },
    "4540": {
      "op": "SWAP1"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "AND"
    },
    "4543": {
      "op": "DUP1"
    },
    "4544": {
      "op": "PUSH2",
      "value": "0x11CA"
    },
    "4547": {
      "op": "JUMPI"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4550": {
      "op": "DUP3"
    },
    "4551": {
      "op": "AND"
    },
    "4552": {
      "op": "SWAP2"
    },
    "4553": {
      "op": "POP"
    },
    "4554": {
      "op": "JUMPDEST"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "LT"
    },
    "4559": {
      "op": "DUP2"
    },
    "4560": {
      "op": "EQ"
    },
    "4561": {
      "op": "ISZERO"
    },
    "4562": {
      "op": "PUSH2",
      "value": "0x11EB"
    },
    "4565": {
      "op": "JUMPI"
    },
    "4566": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4573": {
      "op": "SHL"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4576": {
      "op": "MSTORE"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4581": {
      "op": "MSTORE"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4586": {
      "op": "REVERT"
    },
    "4587": {
      "op": "JUMPDEST"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "op": "SWAP2"
    },
    "4590": {
      "op": "SWAP1"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "jump": "o",
      "op": "JUMP"
    },
    "4593": {
      "op": "JUMPDEST"
    },
    "4594": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4601": {
      "op": "SHL"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4604": {
      "op": "MSTORE"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4609": {
      "op": "MSTORE"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4614": {
      "op": "REVERT"
    }
  },
  "sha1": "54f31d042c31e9fdecae43c06b05b87a1871c6d8",
  "source": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Exchange is ERC20 {\n  address public token_address;\n\n  constructor(address _token) ERC20(\"Uniswap V1\", \"UNI-V1\") {\n      require(_token != address(0), \"invalid token address\");\n\n      token_address = _token;\n  }\n\n  function getReserves() public view returns (uint256) {\n    return IERC20(token_address).balanceOf(address(this));\n  }\n\n  function addLiquidity(uint256 min_liquidity, uint256 max_tokens) public payable returns (uint256) {\n    uint256 total_liquidity = totalSupply();\n\n    if (total_liquidity > 0) {\n      require(min_liquidity > 0, \"not enough liquidity!\");\n\n      uint256 eth_reserve = address(this).balance - msg.value;\n      uint256 token_reserve = getReserves();\n\n      uint256 token_amount = token_reserve * msg.value / eth_reserve;\n      uint256 liquidity_minted = total_liquidity * msg.value / eth_reserve;\n\n      require(max_tokens >= token_amount && liquidity_minted >= min_liquidity, \"wrong liq. provider params\");\n      IERC20 token = IERC20(token_address);\n      token.transferFrom(msg.sender, address(this), token_amount);\n\n      _mint(msg.sender, liquidity_minted);\n      return liquidity_minted;\n    }\n\n    else {\n      require(token_address != address(0) && msg.value >= 1000000000);\n      uint256 token_amount = max_tokens;\n      uint256 liquidity_minted = address(this).balance;\n\n      IERC20 token = IERC20(token_address);\n      token.transferFrom(msg.sender, address(this), token_amount);\n\n      _mint(msg.sender, liquidity_minted);\n      return liquidity_minted;\n    }\n  }\n\n  function removeLiquidity(uint256 amount, uint256 min_eth, uint256 min_tokens) public returns (uint256, uint256) {\n    require(amount > 0 && min_eth > 0 && min_tokens > 0);\n    uint256 total_liquidity = totalSupply();\n    require(total_liquidity > 0, \"liquidity must be positive to remove\");\n\n    uint256 token_reserve = getReserves();\n    uint256 eth_amount = amount * address(this).balance / total_liquidity;\n    uint256 token_amount = amount * token_reserve / total_liquidity;\n    require(eth_amount >= min_eth && token_amount >= min_tokens, \"wrong liq. removing params\");\n\n    _burn(msg.sender, amount);\n    payable(msg.sender).transfer(eth_amount);\n    IERC20(token_address).transfer(msg.sender, token_amount);\n\n    return (eth_amount, token_amount);\n  }\n}",
  "sourceMap": "171:2280:4:-:0;;;235:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1898:114:0;;;;;;;;;;;-1:-1:-1;;;1898:114:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1898:114:0;;;;1965:13;;1898:114;;;1965:13;;:5;;:13;:::i;:::-;-1:-1:-1;1988:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;;;;;;;309:20:4;::::1;301:54;;;::::0;-1:-1:-1;;;301:54:4;;511:2:5;301:54:4::1;::::0;::::1;493:21:5::0;550:2;530:18;;;523:30;589:23;569:18;;;562:51;630:18;;301:54:4::1;;;;;;;;364:13;:22:::0;;-1:-1:-1;;;;;;364:22:4::1;-1:-1:-1::0;;;;;364:22:4;;;::::1;::::0;;;::::1;::::0;;171:2280;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;171:2280:4;;;-1:-1:-1;171:2280:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;153:1;150;143:12;105:2;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:2;;270:1;267;260:12;204:2;293:5;95:209;-1:-1:-1;;;95:209:5:o;659:380::-;738:1;734:12;;;;781;;;802:2;;856:4;848:6;844:17;834:27;;802:2;909;901:6;898:14;878:18;875:38;872:2;;;955:10;950:3;946:20;943:1;936:31;990:4;987:1;980:15;1018:4;1015:1;1008:15;872:2;;714:325;;;:::o;:::-;171:2280:4;;;;;;",
  "sourcePath": "contracts/Exchange.sol",
  "type": "contract"
}